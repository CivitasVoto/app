{
  "contractName": "NonStandardTokenRegistry",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "listedAddresses",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdate",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "register",
          "type": "bool"
        }
      ],
      "name": "setAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"register\",\"type\":\"bool\"}],\"name\":\"setAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"listedAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"acceptOwnership()\":{\"details\":\"used by a new owner to accept an ownership transfer\\r\"},\"setAddress(address,bool)\":{\"details\":\"registers/unregisters a new non standard ERC20 token in the registry\\r \\r\",\"params\":{\"register\":\"true to register the token, false to remove it\\r\",\"token\":\"token address\\r\"}},\"transferOwnership(address)\":{\"details\":\"allows transferring the contract ownership\\r the new owner still needs to accept the transfer\\r can only be called by the contract owner\\r \\r\",\"params\":{\"_newOwner\":\"new contract owner\\r\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/NonStandardTokenRegistry.sol\":\"NonStandardTokenRegistry\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/NonStandardTokenRegistry.sol\":{\"keccak256\":\"0x6460ac2dc80c6baf61bec75b04cf161fca449399050de4638cf979c0a5f2a706\",\"urls\":[\"bzzr://89a7bcfe330781f7c6eea3466786a22b9dd056b48c4d3967dc5f8013ffd995a4\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/Owned.sol\":{\"keccak256\":\"0x599f08617f7ec2d1e250ec6f90852319cb94944d82026c459bb66a39c93138bf\",\"urls\":[\"bzzr://0e04734a4b9a2343cea3476f13d616b0fcf174e76bd0fc5478335786e0336bef\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/interfaces/IAddressList.sol\":{\"keccak256\":\"0x3de4d53e90ce340cf45e9fde143fa6956ff0ab2c40a8ac7f155995ab09736390\",\"urls\":[\"bzzr://cc8bbe33aa156cd273b4f60ef678bd489c9a052962323c48ae571625ec5f686a\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/interfaces/IOwned.sol\":{\"keccak256\":\"0x3bfadfd06a9f37a8687474694252513f00d84ff9074c9d3c69c311d62686e588\",\"urls\":[\"bzzr://b168ba3d91c3119b53b54679bec05592fe124e42f2345e785a4fd08c8225b39e\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060018054600160a060020a031916331790556102e1806100326000396000f3006080604052600436106100775763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663608b326f811461007c57806379ba5097146100a45780638da5cb5b146100b9578063aeea10bd146100ea578063d4ee1d901461011f578063f2fde38b14610134575b600080fd5b34801561008857600080fd5b506100a2600160a060020a03600435166024351515610155565b005b3480156100b057600080fd5b506100a2610197565b3480156100c557600080fd5b506100ce610221565b60408051600160a060020a039092168252519081900360200190f35b3480156100f657600080fd5b5061010b600160a060020a0360043516610230565b604080519115158252519081900360200190f35b34801561012b57600080fd5b506100ce610245565b34801561014057600080fd5b506100a2600160a060020a0360043516610254565b600154600160a060020a0316331461016c57600080fd5b600160a060020a03919091166000908152600360205260409020805460ff1916911515919091179055565b600254600160a060020a031633146101ae57600080fd5b600254600154604051600160a060020a0392831692909116907f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a90600090a3600280546001805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600154600160a060020a031681565b60036020526000908152604090205460ff1681565b600254600160a060020a031681565b600154600160a060020a0316331461026b57600080fd5b600154600160a060020a038281169116141561028657600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820105b410e4c57185519e48eef2d48b70c7bca609eb8b56e94df84fa24e2d8041a0029",
  "deployedBytecode": "0x6080604052600436106100775763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663608b326f811461007c57806379ba5097146100a45780638da5cb5b146100b9578063aeea10bd146100ea578063d4ee1d901461011f578063f2fde38b14610134575b600080fd5b34801561008857600080fd5b506100a2600160a060020a03600435166024351515610155565b005b3480156100b057600080fd5b506100a2610197565b3480156100c557600080fd5b506100ce610221565b60408051600160a060020a039092168252519081900360200190f35b3480156100f657600080fd5b5061010b600160a060020a0360043516610230565b604080519115158252519081900360200190f35b34801561012b57600080fd5b506100ce610245565b34801561014057600080fd5b506100a2600160a060020a0360043516610254565b600154600160a060020a0316331461016c57600080fd5b600160a060020a03919091166000908152600360205260409020805460ff1916911515919091179055565b600254600160a060020a031633146101ae57600080fd5b600254600154604051600160a060020a0392831692909116907f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a90600090a3600280546001805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600154600160a060020a031681565b60036020526000908152604090205460ff1681565b600254600160a060020a031681565b600154600160a060020a0316331461026b57600080fd5b600154600160a060020a038281169116141561028657600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820105b410e4c57185519e48eef2d48b70c7bca609eb8b56e94df84fa24e2d8041a0029",
  "sourceMap": "257:586:48:-;;;463:29;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;560:5:49;:18;;-1:-1:-1;;;;;;560:18:49;568:10;560:18;;;257:586:48;;;;;;",
  "deployedSourceMap": "257:586:48:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;721:119;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;721:119:48;-1:-1:-1;;;;;721:119:48;;;;;;;;;;;1194:187:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1194:187:49;;;;168:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;168:20:49;;;;;;;;-1:-1:-1;;;;;168:20:49;;;;;;;;;;;;;;323:48:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;323:48:48;-1:-1:-1;;;;;323:48:48;;;;;;;;;;;;;;;;;;;;;;;195:23:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;195:23:49;;;;963:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;963:140:49;-1:-1:-1;;;;;963:140:49;;;;;721:119:48;689:5:49;;-1:-1:-1;;;;;689:5:49;675:10;:19;667:28;;;;;;-1:-1:-1;;;;;799:22:48;;;;;;;;:15;:22;;;;;:33;;-1:-1:-1;;799:33:48;;;;;;;;;;721:119::o;1194:187:49:-;1261:8;;-1:-1:-1;;;;;1261:8:49;1247:10;:22;1239:31;;;;;;1305:8;;;1298:5;1286:28;;-1:-1:-1;;;;;1305:8:49;;;;1298:5;;;;1286:28;;1305:8;;1286:28;1333:8;;;;1325:16;;-1:-1:-1;;1325:16:49;;;-1:-1:-1;;;;;1333:8:49;;1325:16;;;;1352:21;;;1194:187::o;168:20::-;;;-1:-1:-1;;;;;168:20:49;;:::o;323:48:48:-;;;;;;;;;;;;;;;:::o;195:23:49:-;;;-1:-1:-1;;;;;195:23:49;;:::o;963:140::-;689:5;;-1:-1:-1;;;;;689:5:49;675:10;:19;667:28;;;;;;1058:5;;-1:-1:-1;;;;;1045:18:49;;;1058:5;;1045:18;;1037:27;;;;;;1075:8;:20;;-1:-1:-1;;1075:20:49;-1:-1:-1;;;;;1075:20:49;;;;;;;;;;963:140::o",
  "source": "pragma solidity ^0.4.24;\r\nimport './Owned.sol';\r\nimport './interfaces/IAddressList.sol';\r\n\r\n/**\r\n  * @dev Non standard token registry\r\n  * \r\n  * manages tokens who don't return true/false on transfer/transferFrom/approve but revert on failure instead \r\n*/\r\ncontract NonStandardTokenRegistry is IAddressList, Owned {\r\n\r\n    mapping (address => bool) public listedAddresses;\r\n\r\n    /**\r\n      * @dev initializes a new NonStandardTokenRegistry instance\r\n    */\r\n    constructor() public {\r\n    }\r\n\r\n    /**\r\n      * @dev registers/unregisters a new non standard ERC20 token in the registry\r\n      * \r\n      * @param token    token address\r\n      * @param register true to register the token, false to remove it\r\n    */\r\n    function setAddress(address token, bool register) public ownerOnly {\r\n        listedAddresses[token] = register;\r\n    }\r\n}",
  "sourcePath": "/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/NonStandardTokenRegistry.sol",
  "ast": {
    "absolutePath": "/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/NonStandardTokenRegistry.sol",
    "exportedSymbols": {
      "NonStandardTokenRegistry": [
        12598
      ]
    },
    "id": 12599,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12567,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:48"
      },
      {
        "absolutePath": "/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/Owned.sol",
        "file": "./Owned.sol",
        "id": 12568,
        "nodeType": "ImportDirective",
        "scope": 12599,
        "sourceUnit": 12679,
        "src": "26:21:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/interfaces/IAddressList.sol",
        "file": "./interfaces/IAddressList.sol",
        "id": 12569,
        "nodeType": "ImportDirective",
        "scope": 12599,
        "sourceUnit": 13025,
        "src": "49:39:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12570,
              "name": "IAddressList",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13024,
              "src": "294:12:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAddressList_$13024",
                "typeString": "contract IAddressList"
              }
            },
            "id": 12571,
            "nodeType": "InheritanceSpecifier",
            "src": "294:12:48"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12572,
              "name": "Owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12678,
              "src": "308:5:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned_$12678",
                "typeString": "contract Owned"
              }
            },
            "id": 12573,
            "nodeType": "InheritanceSpecifier",
            "src": "308:5:48"
          }
        ],
        "contractDependencies": [
          12678,
          13024,
          13077
        ],
        "contractKind": "contract",
        "documentation": "@dev Non standard token registry\r\n\r\nmanages tokens who don't return true/false on transfer/transferFrom/approve but revert on failure instead \r",
        "fullyImplemented": true,
        "id": 12598,
        "linearizedBaseContracts": [
          12598,
          12678,
          13077,
          13024
        ],
        "name": "NonStandardTokenRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 12577,
            "name": "listedAddresses",
            "nodeType": "VariableDeclaration",
            "scope": 12598,
            "src": "323:48:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 12576,
              "keyType": {
                "id": 12574,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "332:7:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "323:25:48",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 12575,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "343:4:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12580,
              "nodeType": "Block",
              "src": "484:8:48",
              "statements": []
            },
            "documentation": "@dev initializes a new NonStandardTokenRegistry instance\r",
            "id": 12581,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "474:2:48"
            },
            "payable": false,
            "returnParameters": {
              "id": 12579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:48"
            },
            "scope": 12598,
            "src": "463:29:48",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12596,
              "nodeType": "Block",
              "src": "788:52:48",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12590,
                        "name": "listedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12577,
                        "src": "799:15:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 12592,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 12591,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12583,
                        "src": "815:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "799:22:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12593,
                      "name": "register",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12585,
                      "src": "824:8:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "799:33:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12595,
                  "nodeType": "ExpressionStatement",
                  "src": "799:33:48"
                }
              ]
            },
            "documentation": "@dev registers/unregisters a new non standard ERC20 token in the registry\r\n\r\n@param token    token address\r\n@param register true to register the token, false to remove it\r",
            "id": 12597,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 12588,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12587,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12633,
                  "src": "778:9:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "778:9:48"
              }
            ],
            "name": "setAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12583,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 12597,
                  "src": "741:13:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12582,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12585,
                  "name": "register",
                  "nodeType": "VariableDeclaration",
                  "scope": 12597,
                  "src": "756:13:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12584,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "756:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "740:30:48"
            },
            "payable": false,
            "returnParameters": {
              "id": 12589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "788:0:48"
            },
            "scope": 12598,
            "src": "721:119:48",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 12599,
        "src": "257:586:48"
      }
    ],
    "src": "0:843:48"
  },
  "legacyAST": {
    "absolutePath": "/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/NonStandardTokenRegistry.sol",
    "exportedSymbols": {
      "NonStandardTokenRegistry": [
        12598
      ]
    },
    "id": 12599,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12567,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:48"
      },
      {
        "absolutePath": "/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/Owned.sol",
        "file": "./Owned.sol",
        "id": 12568,
        "nodeType": "ImportDirective",
        "scope": 12599,
        "sourceUnit": 12679,
        "src": "26:21:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/interfaces/IAddressList.sol",
        "file": "./interfaces/IAddressList.sol",
        "id": 12569,
        "nodeType": "ImportDirective",
        "scope": 12599,
        "sourceUnit": 13025,
        "src": "49:39:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12570,
              "name": "IAddressList",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13024,
              "src": "294:12:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAddressList_$13024",
                "typeString": "contract IAddressList"
              }
            },
            "id": 12571,
            "nodeType": "InheritanceSpecifier",
            "src": "294:12:48"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12572,
              "name": "Owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12678,
              "src": "308:5:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned_$12678",
                "typeString": "contract Owned"
              }
            },
            "id": 12573,
            "nodeType": "InheritanceSpecifier",
            "src": "308:5:48"
          }
        ],
        "contractDependencies": [
          12678,
          13024,
          13077
        ],
        "contractKind": "contract",
        "documentation": "@dev Non standard token registry\r\n\r\nmanages tokens who don't return true/false on transfer/transferFrom/approve but revert on failure instead \r",
        "fullyImplemented": true,
        "id": 12598,
        "linearizedBaseContracts": [
          12598,
          12678,
          13077,
          13024
        ],
        "name": "NonStandardTokenRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 12577,
            "name": "listedAddresses",
            "nodeType": "VariableDeclaration",
            "scope": 12598,
            "src": "323:48:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 12576,
              "keyType": {
                "id": 12574,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "332:7:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "323:25:48",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 12575,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "343:4:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12580,
              "nodeType": "Block",
              "src": "484:8:48",
              "statements": []
            },
            "documentation": "@dev initializes a new NonStandardTokenRegistry instance\r",
            "id": 12581,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "474:2:48"
            },
            "payable": false,
            "returnParameters": {
              "id": 12579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:48"
            },
            "scope": 12598,
            "src": "463:29:48",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12596,
              "nodeType": "Block",
              "src": "788:52:48",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12590,
                        "name": "listedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12577,
                        "src": "799:15:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 12592,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 12591,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12583,
                        "src": "815:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "799:22:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12593,
                      "name": "register",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12585,
                      "src": "824:8:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "799:33:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12595,
                  "nodeType": "ExpressionStatement",
                  "src": "799:33:48"
                }
              ]
            },
            "documentation": "@dev registers/unregisters a new non standard ERC20 token in the registry\r\n\r\n@param token    token address\r\n@param register true to register the token, false to remove it\r",
            "id": 12597,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 12588,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12587,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12633,
                  "src": "778:9:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "778:9:48"
              }
            ],
            "name": "setAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12583,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 12597,
                  "src": "741:13:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12582,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12585,
                  "name": "register",
                  "nodeType": "VariableDeclaration",
                  "scope": 12597,
                  "src": "756:13:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12584,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "756:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "740:30:48"
            },
            "payable": false,
            "returnParameters": {
              "id": 12589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "788:0:48"
            },
            "scope": 12598,
            "src": "721:119:48",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 12599,
        "src": "257:586:48"
      }
    ],
    "src": "0:843:48"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.26+commit.4563c3fc.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {},
      "links": {},
      "address": "0xa631B044876f527cA3D8E6a2a726730AE8639cC8",
      "transactionHash": "0x8f61eab94d7718a428ce143b5fa607d0a38f7698d775d11a0d91e576605decd6"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-10-30T08:53:36.933Z",
  "devdoc": {
    "methods": {
      "acceptOwnership()": {
        "details": "used by a new owner to accept an ownership transfer\r"
      },
      "setAddress(address,bool)": {
        "details": "registers/unregisters a new non standard ERC20 token in the registry\r \r",
        "params": {
          "register": "true to register the token, false to remove it\r",
          "token": "token address\r"
        }
      },
      "transferOwnership(address)": {
        "details": "allows transferring the contract ownership\r the new owner still needs to accept the transfer\r can only be called by the contract owner\r \r",
        "params": {
          "_newOwner": "new contract owner\r"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}