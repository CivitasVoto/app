{
  "contractName": "TestNonStandardERC20Token",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "standard",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_supply",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"allow another account/contract to spend some tokens on your behalf\\r throws on any error rather then return a false flag to minimize user errors\\r \\r also, to minimize the risk of the approve/transferFrom attack vector\\r (see https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/), approve has to be called twice\\r in 2 separate transactions - once to change the allowance to 0 and secondly to change it to the new allowance value\\r \\r\",\"params\":{\"_spender\":\"approved address\\r\",\"_value\":\"allowance amount\\r \\r\"},\"return\":\"true if the approval was successful, false if it wasn't\\r\"},\"transfer(address,uint256)\":{\"details\":\"send coins\\r throws on any error rather then return a false flag to minimize user errors\\r \\r\",\"params\":{\"_to\":\"target address\\r\",\"_value\":\"transfer amount\\r \\r\"},\"return\":\"true if the transfer was successful, false if it wasn't\\r\"},\"transferFrom(address,address,uint256)\":{\"details\":\"an account/contract attempts to get the coins\\r throws on any error rather then return a false flag to minimize user errors\\r \\r\",\"params\":{\"_from\":\"source address\\r\",\"_to\":\"target address\\r\",\"_value\":\"transfer amount\\r \\r\"},\"return\":\"true if the transfer was successful, false if it wasn't\\r\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/helpers/TestNonStandardERC20Token.sol\":\"TestNonStandardERC20Token\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/helpers/NonStandardERC20Token.sol\":{\"keccak256\":\"0xc7b650be589483f4c2b97bdf22d0d111fb2680afcb5f07043ff01c286b70390c\",\"urls\":[\"bzzr://a892261f4855a99fcdacc9b331d90af4f03828c76176e7cc3d4818f431380858\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/helpers/TestNonStandardERC20Token.sol\":{\"keccak256\":\"0x28a44203d6e0280f6b69ecc9c8f2ca77185face1c1b057ce918dc32608a70de7\",\"urls\":[\"bzzr://1faefca083025b956d4b0084d4966e77d5666c82d4b756e56e4f9b1d95623ef0\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/token/interfaces/INonStandardERC20.sol\":{\"keccak256\":\"0x26596dd8e564493f7e821102865fb382c21bbedd44ebc920c8d63626f1bf19dc\",\"urls\":[\"bzzr://c750029c9ba7521fbe0c1827a4854a4b8db274d4402e00daaa4683a024c44d93\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/SafeMath.sol\":{\"keccak256\":\"0x1da299da4f5b50ea11c19a98ff519e8a7c2626222105cbfa0b3c6bbbd726ab7d\",\"urls\":[\"bzzr://e49efd2cc2a188b1fc641ebcdaf1bb262904e45060deb343c4d59ca4dac63034\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/Utils.sol\":{\"keccak256\":\"0xc6c712f4e559fe6c03d9f84aebc93869bf48ec740355bc4add307e0bbbc41edc\",\"urls\":[\"bzzr://d61b1565f341056ca6a4dd33640327bb55e698c2785c4606972da2acccf439f0\"]}},\"version\":1}",
  "bytecode": "0x60c0604052600960808190527f546f6b656e20302e31000000000000000000000000000000000000000000000060a090815261003e9160009190610141565b5060408051602081019182905260009081905261005d91600191610141565b5060408051602081019182905260009081905261007c91600291610141565b506003805460ff19169055600060045534801561009857600080fd5b506040516108d53803806108d5833981016040908152815160208301519183015190830180519093929092019183908390600090811080156100db575060008251115b15156100e657600080fd5b82516100f9906001906020860190610141565b50815161010d906002906020850190610141565b506003805460ff191660ff929092169190911790555050600481905533600090815260056020526040902055506101dc9050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061018257805160ff19168380011785556101af565b828001600101855582156101af579182015b828111156101af578251825591602001919060010190610194565b506101bb9291506101bf565b5090565b6101d991905b808211156101bb57600081556001016101c5565b90565b6106ea806101eb6000396000f3006080604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a8578063095ea7b31461013257806318160ddd1461015857806323b872dd1461017f578063313ce567146101a95780635a3b7e42146101d457806370a08231146101e957806395d89b411461020a578063a9059cbb1461021f578063dd62ed3e14610243575b600080fd5b3480156100b457600080fd5b506100bd61026a565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f75781810151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561013e57600080fd5b50610156600160a060020a03600435166024356102f7565b005b34801561016457600080fd5b5061016d6103a9565b60408051918252519081900360200190f35b34801561018b57600080fd5b50610156600160a060020a03600435811690602435166044356103af565b3480156101b557600080fd5b506101be6104e3565b6040805160ff9092168252519081900360200190f35b3480156101e057600080fd5b506100bd6104ec565b3480156101f557600080fd5b5061016d600160a060020a0360043516610547565b34801561021657600080fd5b506100bd610559565b34801561022b57600080fd5b50610156600160a060020a03600435166024356105b1565b34801561024f57600080fd5b5061016d600160a060020a0360043581169060243516610673565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102ef5780601f106102c4576101008083540402835291602001916102ef565b820191906000526020600020905b8154815290600101906020018083116102d257829003601f168201915b505050505081565b81600160a060020a038116151561030d57600080fd5b81158061033b5750336000908152600660209081526040808320600160a060020a0387168452909152902054155b151561034657600080fd5b336000818152600660209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3505050565b60045481565b82600160a060020a03811615156103c557600080fd5b82600160a060020a03811615156103db57600080fd5b600160a060020a038516600090815260066020908152604080832033845290915290205461040f908463ffffffff61069016565b600160a060020a038616600081815260066020908152604080832033845282528083209490945591815260059091522054610450908463ffffffff61069016565b600160a060020a038087166000908152600560205260408082209390935590861681522054610485908463ffffffff6106a516565b600160a060020a0380861660008181526005602090815260409182902094909455805187815290519193928916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35050505050565b60035460ff1681565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102ef5780601f106102c4576101008083540402835291602001916102ef565b60056020526000908152604090205481565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156102ef5780601f106102c4576101008083540402835291602001916102ef565b81600160a060020a03811615156105c757600080fd5b336000908152600560205260409020546105e7908363ffffffff61069016565b3360009081526005602052604080822092909255600160a060020a03851681522054610619908363ffffffff6106a516565b600160a060020a0384166000818152600560209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505050565b600660209081526000928352604080842090915290825290205481565b60008183101561069f57600080fd5b50900390565b6000828201838110156106b757600080fd5b93925050505600a165627a7a72305820bdeb4a7dc1f63eabcf94b817ba6a52738aca000158fc3bafca158eb8dc7906900029",
  "deployedBytecode": "0x6080604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a8578063095ea7b31461013257806318160ddd1461015857806323b872dd1461017f578063313ce567146101a95780635a3b7e42146101d457806370a08231146101e957806395d89b411461020a578063a9059cbb1461021f578063dd62ed3e14610243575b600080fd5b3480156100b457600080fd5b506100bd61026a565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f75781810151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561013e57600080fd5b50610156600160a060020a03600435166024356102f7565b005b34801561016457600080fd5b5061016d6103a9565b60408051918252519081900360200190f35b34801561018b57600080fd5b50610156600160a060020a03600435811690602435166044356103af565b3480156101b557600080fd5b506101be6104e3565b6040805160ff9092168252519081900360200190f35b3480156101e057600080fd5b506100bd6104ec565b3480156101f557600080fd5b5061016d600160a060020a0360043516610547565b34801561021657600080fd5b506100bd610559565b34801561022b57600080fd5b50610156600160a060020a03600435166024356105b1565b34801561024f57600080fd5b5061016d600160a060020a0360043581169060243516610673565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102ef5780601f106102c4576101008083540402835291602001916102ef565b820191906000526020600020905b8154815290600101906020018083116102d257829003601f168201915b505050505081565b81600160a060020a038116151561030d57600080fd5b81158061033b5750336000908152600660209081526040808320600160a060020a0387168452909152902054155b151561034657600080fd5b336000818152600660209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3505050565b60045481565b82600160a060020a03811615156103c557600080fd5b82600160a060020a03811615156103db57600080fd5b600160a060020a038516600090815260066020908152604080832033845290915290205461040f908463ffffffff61069016565b600160a060020a038616600081815260066020908152604080832033845282528083209490945591815260059091522054610450908463ffffffff61069016565b600160a060020a038087166000908152600560205260408082209390935590861681522054610485908463ffffffff6106a516565b600160a060020a0380861660008181526005602090815260409182902094909455805187815290519193928916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35050505050565b60035460ff1681565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102ef5780601f106102c4576101008083540402835291602001916102ef565b60056020526000908152604090205481565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156102ef5780601f106102c4576101008083540402835291602001916102ef565b81600160a060020a03811615156105c757600080fd5b336000908152600560205260409020546105e7908363ffffffff61069016565b3360009081526005602052604080822092909255600160a060020a03851681522054610619908363ffffffff6106a516565b600160a060020a0384166000818152600560209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505050565b600660209081526000928352604080842090915290825290205481565b60008183101561069f57600080fd5b50900390565b6000828201838110156106b757600080fd5b93925050505600a165627a7a72305820bdeb4a7dc1f63eabcf94b817ba6a52738aca000158fc3bafca158eb8dc7906900029",
  "sourceMap": "301:36:24:-;108:274:31;301:36:24;;108:274:31;301:36:24;;;;;;;;;;-1:-1:-1;;301:36:24;;:::i;:::-;-1:-1:-1;344:23:24;;;;;;;;;;-1:-1:-1;344:23:24;;;;;;;;;:::i;:::-;-1:-1:-1;374:25:24;;;;;;;;;;-1:-1:-1;374:25:24;;;;;;;;;:::i;:::-;-1:-1:-1;406:25:24;;;-1:-1:-1;;406:25:24;;;430:1;438:30;;174:206:31;5:2:-1;;;;30:1;27;20:12;5:2;174:206:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1095:19:24;;174:206:31;;;;;;;;;;;294:1;;1095:23:24;-1:-1:-1;1095:52:24;;;;;1146:1;1128:7;1122:21;:25;1095:52;1087:61;;;;;;;;1179:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;1202:16:24;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;1229:8:24;:20;;-1:-1:-1;;1229:20:24;;;;;;;;;;;;-1:-1:-1;;311:11:31;:21;;;352:10;-1:-1:-1;342:21:31;;;:9;:21;;;;;:31;-1:-1:-1;108:274:31;;-1:-1:-1;108:274:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;108:274:31;;;-1:-1:-1;108:274:31;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "108:274:31:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;344:23:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;344:23:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;344:23:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3322:416;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3322:416:24;-1:-1:-1;;;;;3322:416:24;;;;;;;;;438:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;438:30:24;;;;;;;;;;;;;;;;;;;;2224:389;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2224:389:24;-1:-1:-1;;;;;2224:389:24;;;;;;;;;;;;406:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;406:25:24;;;;;;;;;;;;;;;;;;;;;;;301:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;301:36:24;;;;475:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;475:45:24;-1:-1:-1;;;;;475:45:24;;;;;374:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;374:25:24;;;;1566:274;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1566:274:24;-1:-1:-1;;;;;1566:274:24;;;;;;;527:66;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;527:66:24;-1:-1:-1;;;;;527:66:24;;;;;;;;;;344:23;;;;;;;;;;;;;;;-1:-1:-1;;344:23:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3322:416::-;3411:8;-1:-1:-1;;;;;458:22:51;;;;450:31;;;;;;3571:11:24;;;:51;;-1:-1:-1;3596:10:24;3586:21;;;;:9;:21;;;;;;;;-1:-1:-1;;;;;3586:31:24;;;;;;;;;;:36;3571:51;3563:60;;;;;;;;3646:10;3636:21;;;;:9;:21;;;;;;;;-1:-1:-1;;;;;3636:31:24;;;;;;;;;;;;:40;;;3692:38;;;;;;;3636:31;;3646:10;3692:38;;;;;;;;;;;3322:416;;;:::o;438:30::-;;;;:::o;2224:389::-;2328:5;-1:-1:-1;;;;;458:22:51;;;;450:31;;;;;;2357:3:24;-1:-1:-1;;;;;458:22:51;;;;450:31;;;;;;-1:-1:-1;;;;;2409:16:24;;;;;;:9;:16;;;;;;;;2426:10;2409:28;;;;;;;;:40;;2442:6;2409:40;:32;:40;:::i;:::-;-1:-1:-1;;;;;2378:16:24;;;;;;:9;:16;;;;;;;;2395:10;2378:28;;;;;;;:71;;;;2479:16;;;:9;:16;;;;;:28;;2500:6;2479:28;:20;:28;:::i;:::-;-1:-1:-1;;;;;2460:16:24;;;;;;;:9;:16;;;;;;:47;;;;2535:14;;;;;;;:26;;2554:6;2535:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;2518:14:24;;;;;;;:9;:14;;;;;;;;;:43;;;;2577:28;;;;;;;2518:14;;2577:28;;;;;;;;;;;;;492:1:51;2224:389:24;;;;:::o;406:25::-;;;;;;:::o;301:36::-;;;;;;;;;;;;;;;-1:-1:-1;;301:36:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;475:45;;;;;;;;;;;;;:::o;374:25::-;;;;;;;;;;;;;;-1:-1:-1;;374:25:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1566:274;1651:3;-1:-1:-1;;;;;458:22:51;;;;450:31;;;;;;1706:10:24;1696:21;;;;:9;:21;;;;;;:33;;1722:6;1696:33;:25;:33;:::i;:::-;1682:10;1672:21;;;;:9;:21;;;;;;:57;;;;-1:-1:-1;;;;;1757:14:24;;;;;;:26;;1776:6;1757:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;1740:14:24;;;;;;:9;:14;;;;;;;;;:43;;;;1799:33;;;;;;;1740:14;;1808:10;;1799:33;;;;;;;;;;1566:274;;;:::o;527:66::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;715:130:49:-;775:7;803:8;;;;795:17;;;;;;-1:-1:-1;830:7:49;;;715:130::o;337:153::-;397:7;429;;;455;;;;447:16;;;;;;481:1;337:153;-1:-1:-1;;;337:153:49:o",
  "source": "pragma solidity ^0.4.24;\nimport './NonStandardERC20Token.sol';\n\n/*\n    Test token with predefined supply\n*/\ncontract TestNonStandardERC20Token is NonStandardERC20Token {\n    constructor(string _name, string _symbol, uint256 _supply)\n        public\n        NonStandardERC20Token(_name, _symbol, 0)\n    {\n        totalSupply = _supply;\n        balanceOf[msg.sender] = _supply;\n    }\n}\n",
  "sourcePath": "/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/helpers/TestNonStandardERC20Token.sol",
  "ast": {
    "absolutePath": "/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/helpers/TestNonStandardERC20Token.sol",
    "exportedSymbols": {
      "TestNonStandardERC20Token": [
        10735
      ]
    },
    "id": 10736,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10705,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:31"
      },
      {
        "absolutePath": "/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/helpers/NonStandardERC20Token.sol",
        "file": "./NonStandardERC20Token.sol",
        "id": 10706,
        "nodeType": "ImportDirective",
        "scope": 10736,
        "sourceUnit": 10097,
        "src": "25:37:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10707,
              "name": "NonStandardERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10096,
              "src": "146:21:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NonStandardERC20Token_$10096",
                "typeString": "contract NonStandardERC20Token"
              }
            },
            "id": 10708,
            "nodeType": "InheritanceSpecifier",
            "src": "146:21:31"
          }
        ],
        "contractDependencies": [
          10096,
          11912,
          12746
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10735,
        "linearizedBaseContracts": [
          10735,
          10096,
          12746,
          11912
        ],
        "name": "TestNonStandardERC20Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10733,
              "nodeType": "Block",
              "src": "301:79:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10722,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9886
                      ],
                      "referencedDeclaration": 9886,
                      "src": "311:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10723,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10714,
                      "src": "325:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "311:21:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10725,
                  "nodeType": "ExpressionStatement",
                  "src": "311:21:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 10726,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          9890
                        ],
                        "referencedDeclaration": 9890,
                        "src": "342:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 10729,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10727,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13040,
                          "src": "352:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "352:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "342:21:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10730,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10714,
                      "src": "366:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "342:31:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10732,
                  "nodeType": "ExpressionStatement",
                  "src": "342:31:31"
                }
              ]
            },
            "documentation": null,
            "id": 10734,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10717,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10710,
                    "src": "278:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 10718,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10712,
                    "src": "285:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 10719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "294:1:31",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  }
                ],
                "id": 10720,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10716,
                  "name": "NonStandardERC20Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10096,
                  "src": "256:21:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_NonStandardERC20Token_$10096_$",
                    "typeString": "type(contract NonStandardERC20Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "256:40:31"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10710,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 10734,
                  "src": "186:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10709,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "186:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10712,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 10734,
                  "src": "200:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10711,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "200:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10714,
                  "name": "_supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 10734,
                  "src": "216:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "216:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "185:47:31"
            },
            "payable": false,
            "returnParameters": {
              "id": 10721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:0:31"
            },
            "scope": 10735,
            "src": "174:206:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10736,
        "src": "108:274:31"
      }
    ],
    "src": "0:383:31"
  },
  "legacyAST": {
    "absolutePath": "/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/helpers/TestNonStandardERC20Token.sol",
    "exportedSymbols": {
      "TestNonStandardERC20Token": [
        10735
      ]
    },
    "id": 10736,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10705,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:31"
      },
      {
        "absolutePath": "/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/helpers/NonStandardERC20Token.sol",
        "file": "./NonStandardERC20Token.sol",
        "id": 10706,
        "nodeType": "ImportDirective",
        "scope": 10736,
        "sourceUnit": 10097,
        "src": "25:37:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10707,
              "name": "NonStandardERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10096,
              "src": "146:21:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NonStandardERC20Token_$10096",
                "typeString": "contract NonStandardERC20Token"
              }
            },
            "id": 10708,
            "nodeType": "InheritanceSpecifier",
            "src": "146:21:31"
          }
        ],
        "contractDependencies": [
          10096,
          11912,
          12746
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10735,
        "linearizedBaseContracts": [
          10735,
          10096,
          12746,
          11912
        ],
        "name": "TestNonStandardERC20Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10733,
              "nodeType": "Block",
              "src": "301:79:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10722,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9886
                      ],
                      "referencedDeclaration": 9886,
                      "src": "311:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10723,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10714,
                      "src": "325:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "311:21:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10725,
                  "nodeType": "ExpressionStatement",
                  "src": "311:21:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 10726,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          9890
                        ],
                        "referencedDeclaration": 9890,
                        "src": "342:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 10729,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10727,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13040,
                          "src": "352:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "352:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "342:21:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10730,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10714,
                      "src": "366:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "342:31:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10732,
                  "nodeType": "ExpressionStatement",
                  "src": "342:31:31"
                }
              ]
            },
            "documentation": null,
            "id": 10734,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10717,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10710,
                    "src": "278:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 10718,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10712,
                    "src": "285:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 10719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "294:1:31",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  }
                ],
                "id": 10720,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10716,
                  "name": "NonStandardERC20Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10096,
                  "src": "256:21:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_NonStandardERC20Token_$10096_$",
                    "typeString": "type(contract NonStandardERC20Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "256:40:31"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10710,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 10734,
                  "src": "186:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10709,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "186:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10712,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 10734,
                  "src": "200:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10711,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "200:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10714,
                  "name": "_supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 10734,
                  "src": "216:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "216:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "185:47:31"
            },
            "payable": false,
            "returnParameters": {
              "id": 10721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:0:31"
            },
            "scope": 10735,
            "src": "174:206:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10736,
        "src": "108:274:31"
      }
    ],
    "src": "0:383:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.26+commit.4563c3fc.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-09-13T02:05:18.042Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "allow another account/contract to spend some tokens on your behalf\r throws on any error rather then return a false flag to minimize user errors\r \r also, to minimize the risk of the approve/transferFrom attack vector\r (see https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/), approve has to be called twice\r in 2 separate transactions - once to change the allowance to 0 and secondly to change it to the new allowance value\r \r",
        "params": {
          "_spender": "approved address\r",
          "_value": "allowance amount\r \r"
        },
        "return": "true if the approval was successful, false if it wasn't\r"
      },
      "transfer(address,uint256)": {
        "details": "send coins\r throws on any error rather then return a false flag to minimize user errors\r \r",
        "params": {
          "_to": "target address\r",
          "_value": "transfer amount\r \r"
        },
        "return": "true if the transfer was successful, false if it wasn't\r"
      },
      "transferFrom(address,address,uint256)": {
        "details": "an account/contract attempts to get the coins\r throws on any error rather then return a false flag to minimize user errors\r \r",
        "params": {
          "_from": "source address\r",
          "_to": "target address\r",
          "_value": "transfer amount\r \r"
        },
        "return": "true if the transfer was successful, false if it wasn't\r"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}