{
  "contractName": "TestBancorNetwork",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_register",
          "type": "bool"
        }
      ],
      "name": "registerEtherToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_signerAddress",
          "type": "address"
        }
      ],
      "name": "setSignerAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getReturnByPath",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BANCOR_CONVERTER_UPGRADER",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        },
        {
          "name": "_block",
          "type": "uint256"
        },
        {
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "name": "_v",
          "type": "uint8"
        },
        {
          "name": "_r",
          "type": "bytes32"
        },
        {
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "convertForPrioritized",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BNT_TOKEN",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CONTRACT_REGISTRY",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        },
        {
          "name": "_affiliateAccount",
          "type": "address"
        },
        {
          "name": "_affiliateFee",
          "type": "uint256"
        }
      ],
      "name": "claimAndConvertFor2",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        },
        {
          "name": "_signature",
          "type": "uint256[]"
        },
        {
          "name": "_affiliateAccount",
          "type": "address"
        },
        {
          "name": "_affiliateFee",
          "type": "uint256"
        }
      ],
      "name": "convertForPrioritized4",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_affiliateAccount",
          "type": "address"
        },
        {
          "name": "_affiliateFee",
          "type": "uint256"
        }
      ],
      "name": "convert2",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BANCOR_CONVERTER_FACTORY",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "signerAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxAffiliateFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BNT_CONVERTER",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_toBlockchain",
          "type": "bytes32"
        },
        {
          "name": "_to",
          "type": "bytes32"
        },
        {
          "name": "_conversionId",
          "type": "uint256"
        },
        {
          "name": "_block",
          "type": "uint256"
        },
        {
          "name": "_v",
          "type": "uint8"
        },
        {
          "name": "_r",
          "type": "bytes32"
        },
        {
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "xConvertPrioritized",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        },
        {
          "name": "_block",
          "type": "uint256"
        },
        {
          "name": "_v",
          "type": "uint8"
        },
        {
          "name": "_r",
          "type": "bytes32"
        },
        {
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "convertForPrioritized2",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BANCOR_FORMULA",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "etherTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CONTRACT_FEATURES",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "conversionHashes",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BANCOR_NETWORK",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BANCOR_GAS_PRICE_LIMIT",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CONVERTER_CONVERSION_WHITELIST",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        },
        {
          "name": "_affiliateAccount",
          "type": "address"
        },
        {
          "name": "_affiliateFee",
          "type": "uint256"
        }
      ],
      "name": "convertFor2",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        }
      ],
      "name": "claimAndConvertFor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        },
        {
          "name": "_customVal",
          "type": "uint256"
        },
        {
          "name": "_block",
          "type": "uint256"
        },
        {
          "name": "_v",
          "type": "uint8"
        },
        {
          "name": "_r",
          "type": "bytes32"
        },
        {
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "convertForPrioritized3",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BANCOR_X",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_toBlockchain",
          "type": "bytes32"
        },
        {
          "name": "_to",
          "type": "bytes32"
        },
        {
          "name": "_conversionId",
          "type": "uint256"
        }
      ],
      "name": "xConvert",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        }
      ],
      "name": "claimAndConvert",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        }
      ],
      "name": "convertFor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BANCOR_X_UPGRADER",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_toBlockchain",
          "type": "bytes32"
        },
        {
          "name": "_to",
          "type": "bytes32"
        },
        {
          "name": "_conversionId",
          "type": "uint256"
        },
        {
          "name": "_signature",
          "type": "uint256[]"
        }
      ],
      "name": "xConvertPrioritized2",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_affiliateAccount",
          "type": "address"
        },
        {
          "name": "_affiliateFee",
          "type": "uint256"
        }
      ],
      "name": "claimAndConvert2",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        }
      ],
      "name": "convert",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxAffiliateFee",
          "type": "uint256"
        }
      ],
      "name": "setMaxAffiliateFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "NON_STANDARD_TOKEN_REGISTRY",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdate",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getReturnOld",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getReturnNew",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_register\",\"type\":\"bool\"}],\"name\":\"registerEtherToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_signerAddress\",\"type\":\"address\"}],\"name\":\"setSignerAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getReturnByPath\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BANCOR_CONVERTER_UPGRADER\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"},{\"name\":\"_block\",\"type\":\"uint256\"},{\"name\":\"_nonce\",\"type\":\"uint256\"},{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"convertForPrioritized\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BNT_TOKEN\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_REGISTRY\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"},{\"name\":\"_affiliateAccount\",\"type\":\"address\"},{\"name\":\"_affiliateFee\",\"type\":\"uint256\"}],\"name\":\"claimAndConvertFor2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"},{\"name\":\"_signature\",\"type\":\"uint256[]\"},{\"name\":\"_affiliateAccount\",\"type\":\"address\"},{\"name\":\"_affiliateFee\",\"type\":\"uint256\"}],\"name\":\"convertForPrioritized4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_affiliateAccount\",\"type\":\"address\"},{\"name\":\"_affiliateFee\",\"type\":\"uint256\"}],\"name\":\"convert2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BANCOR_CONVERTER_FACTORY\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"signerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxAffiliateFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BNT_CONVERTER\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_toBlockchain\",\"type\":\"bytes32\"},{\"name\":\"_to\",\"type\":\"bytes32\"},{\"name\":\"_conversionId\",\"type\":\"uint256\"},{\"name\":\"_block\",\"type\":\"uint256\"},{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"xConvertPrioritized\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReturnNew\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"},{\"name\":\"_block\",\"type\":\"uint256\"},{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"convertForPrioritized2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BANCOR_FORMULA\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"etherTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_FEATURES\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"conversionHashes\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BANCOR_NETWORK\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BANCOR_GAS_PRICE_LIMIT\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONVERTER_CONVERSION_WHITELIST\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReturnOld\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"},{\"name\":\"_affiliateAccount\",\"type\":\"address\"},{\"name\":\"_affiliateFee\",\"type\":\"uint256\"}],\"name\":\"convertFor2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"}],\"name\":\"claimAndConvertFor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"},{\"name\":\"_customVal\",\"type\":\"uint256\"},{\"name\":\"_block\",\"type\":\"uint256\"},{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"convertForPrioritized3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BANCOR_X\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_toBlockchain\",\"type\":\"bytes32\"},{\"name\":\"_to\",\"type\":\"bytes32\"},{\"name\":\"_conversionId\",\"type\":\"uint256\"}],\"name\":\"xConvert\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"}],\"name\":\"claimAndConvert\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"}],\"name\":\"convertFor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BANCOR_X_UPGRADER\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_toBlockchain\",\"type\":\"bytes32\"},{\"name\":\"_to\",\"type\":\"bytes32\"},{\"name\":\"_conversionId\",\"type\":\"uint256\"},{\"name\":\"_signature\",\"type\":\"uint256[]\"}],\"name\":\"xConvertPrioritized2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_affiliateAccount\",\"type\":\"address\"},{\"name\":\"_affiliateFee\",\"type\":\"uint256\"}],\"name\":\"claimAndConvert2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxAffiliateFee\",\"type\":\"uint256\"}],\"name\":\"setMaxAffiliateFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NON_STANDARD_TOKEN_REGISTRY\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_fee\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"acceptOwnership()\":{\"details\":\"used by a new owner to accept an ownership transfer\\r\"},\"claimAndConvert(address[],uint256,uint256)\":{\"details\":\"deprecated, backward compatibility\\r\"},\"claimAndConvert2(address[],uint256,uint256,address,uint256)\":{\"details\":\"claims the caller's tokens, converts them to any other token in the bancor network\\r by following a predefined conversion path and transfers the result tokens back to the sender\\r note that allowance must be set beforehand\\r \\r\",\"params\":{\"_affiliateAccount\":\"affiliate account\\r\",\"_affiliateFee\":\"affiliate fee in PPM\\r \\r\",\"_amount\":\"amount to convert from (in the initial source token)\\r\",\"_minReturn\":\"if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\\r\",\"_path\":\"conversion path, see conversion path format above\\r\"},\"return\":\"tokens issued in return\\r\"},\"claimAndConvertFor(address[],uint256,uint256,address)\":{\"details\":\"deprecated, backward compatibility\\r\"},\"claimAndConvertFor2(address[],uint256,uint256,address,address,uint256)\":{\"details\":\"claims the caller's tokens, converts them to any other token in the bancor network\\r by following a predefined conversion path and transfers the result tokens to a target account\\r note that allowance must be set beforehand\\r \\r\",\"params\":{\"_affiliateAccount\":\"affiliate account\\r\",\"_affiliateFee\":\"affiliate fee in PPM\\r \\r\",\"_amount\":\"amount to convert from (in the initial source token)\\r\",\"_for\":\"account that will receive the conversion result\\r\",\"_minReturn\":\"if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\\r\",\"_path\":\"conversion path, see conversion path format above\\r\"},\"return\":\"tokens issued in return\\r\"},\"convert(address[],uint256,uint256)\":{\"details\":\"deprecated, backward compatibility\\r\"},\"convert2(address[],uint256,uint256,address,uint256)\":{\"details\":\"converts the token to any other token in the bancor network by following\\r a predefined conversion path and transfers the result tokens back to the sender\\r note that the converter should already own the source tokens\\r \\r\",\"params\":{\"_affiliateAccount\":\"affiliate account\\r\",\"_affiliateFee\":\"affiliate fee in PPM\\r \\r\",\"_amount\":\"amount to convert from (in the initial source token)\\r\",\"_minReturn\":\"if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\\r\",\"_path\":\"conversion path, see conversion path format above\\r\"},\"return\":\"tokens issued in return\\r\"},\"convertFor(address[],uint256,uint256,address)\":{\"details\":\"deprecated, backward compatibility\\r\"},\"convertFor2(address[],uint256,uint256,address,address,uint256)\":{\"details\":\"converts the token to any other token in the bancor network by following\\r a predefined conversion path and transfers the result tokens to a target account\\r note that the converter should already own the source tokens\\r \\r\",\"params\":{\"_affiliateAccount\":\"affiliate account\\r\",\"_affiliateFee\":\"affiliate fee in PPM\\r \\r\",\"_amount\":\"amount to convert from (in the initial source token)\\r\",\"_for\":\"account that will receive the conversion result\\r\",\"_minReturn\":\"if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\\r\",\"_path\":\"conversion path, see conversion path format above\\r\"},\"return\":\"tokens issued in return\\r\"},\"convertForPrioritized(address[],uint256,uint256,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"deprecated, backward compatibility\\r\"},\"convertForPrioritized2(address[],uint256,uint256,address,uint256,uint8,bytes32,bytes32)\":{\"details\":\"deprecated, backward compatibility\\r\"},\"convertForPrioritized3(address[],uint256,uint256,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"deprecated, backward compatibility\\r\"},\"convertForPrioritized4(address[],uint256,uint256,address,uint256[],address,uint256)\":{\"details\":\"converts the token to any other token in the bancor network\\r by following a predefined conversion path and transfers the result\\r tokens to a target account.\\r this version of the function also allows the verified signer\\r to bypass the universal gas price limit.\\r note that the converter should already own the source tokens\\r \\r\",\"params\":{\"_affiliateAccount\":\"affiliate account\\r\",\"_affiliateFee\":\"affiliate fee in PPM\\r \\r\",\"_amount\":\"amount to convert from (in the initial source token)\\r\",\"_for\":\"account that will receive the conversion result\\r\",\"_minReturn\":\"if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\\r\",\"_path\":\"conversion path, see conversion path format above\\r\",\"_signature\":\"an array of the following elements:\\r                            [0] uint256     custom value that was signed for prioritized conversion\\r                            [1] uint256     if the current block exceeded the given parameter - it is cancelled\\r                            [2] uint8       (signature[128:130]) associated with the signer address and helps to validate if the signature is legit\\r                            [3] bytes32     (signature[0:64]) associated with the signer address and helps to validate if the signature is legit\\r                            [4] bytes32     (signature[64:128]) associated with the signer address and helps to validate if the signature is legit\\r                            if the array is empty (length == 0), then the gas-price limit is verified instead of the signature\\r\"},\"return\":\"tokens issued in return\\r\"},\"getReturnByPath(address[],uint256)\":{\"details\":\"returns the expected return amount for converting a specific amount by following\\r a given conversion path.\\r notice that there is no support for circular paths.\\r \\r\",\"params\":{\"_amount\":\"amount to convert from (in the initial source token)\\r \\r\",\"_path\":\"conversion path, see conversion path format above\\r\"},\"return\":\"expected conversion return amount and conversion fee\\r\"},\"registerEtherToken(address,bool)\":{\"details\":\"allows the owner to register/unregister ether tokens\\r \\r\",\"params\":{\"_register\":\"true to register, false to unregister\\r\",\"_token\":\"ether token contract address\\r\"}},\"setMaxAffiliateFee(uint256)\":{\"details\":\"allows the owner to update the maximum affiliate-fee\\r \\r\",\"params\":{\"_maxAffiliateFee\":\"maximum affiliate-fee\\r\"}},\"setRegistry(address)\":{\"details\":\"allows the owner to update the contract registry contract address\\r \\r\",\"params\":{\"_registry\":\"address of a contract registry contract\\r\"}},\"setSignerAddress(address)\":{\"details\":\"allows the owner to update the signer address\\r \\r\",\"params\":{\"_signerAddress\":\"new signer address\\r\"}},\"transferOwnership(address)\":{\"details\":\"allows transferring the contract ownership\\r the new owner still needs to accept the transfer\\r can only be called by the contract owner\\r \\r\",\"params\":{\"_newOwner\":\"new contract owner\\r\"}},\"withdrawTokens(address,address,uint256)\":{\"details\":\"withdraws tokens held by the contract and sends them to an account\\r can only be called by the owner\\r \\r\",\"params\":{\"_amount\":\"amount to withdraw\\r\",\"_to\":\"account to receive the new amount\\r\",\"_token\":\"ERC20 token contract address\\r\"}},\"xConvert(address[],uint256,uint256,bytes32,bytes32,uint256)\":{\"details\":\"converts any other token to BNT in the bancor network\\r by following a predefined conversion path and transfers the resulting\\r tokens to BancorX.\\r note that the network should already have been given allowance of the source token (if not ETH)\\r \\r\",\"params\":{\"_amount\":\"amount to convert from (in the initial source token)\\r\",\"_conversionId\":\"pre-determined unique (if non zero) id which refers to this transaction \\r \\r\",\"_minReturn\":\"if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\\r\",\"_path\":\"conversion path, see conversion path format above\\r\",\"_to\":\"address/account on _toBlockchain to send the BNT to\\r\",\"_toBlockchain\":\"blockchain BNT will be issued on\\r\"},\"return\":\"the amount of BNT received from this conversion\\r\"},\"xConvertPrioritized(address[],uint256,uint256,bytes32,bytes32,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"deprecated, backward compatibility\\r\"},\"xConvertPrioritized2(address[],uint256,uint256,bytes32,bytes32,uint256,uint256[])\":{\"details\":\"converts any other token to BNT in the bancor network\\r by following a predefined conversion path and transfers the resulting\\r tokens to BancorX.\\r this version of the function also allows the verified signer\\r to bypass the universal gas price limit.\\r note that the network should already have been given allowance of the source token (if not ETH)\\r \\r\",\"params\":{\"_amount\":\"amount to convert from (in the initial source token)\\r\",\"_conversionId\":\"pre-determined unique (if non zero) id which refers to this transaction \\r\",\"_minReturn\":\"if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\\r\",\"_path\":\"conversion path, see conversion path format above\\r\",\"_signature\":\"an array of the following elements:\\r                        [0] uint256     custom value that was signed for prioritized conversion; must be equal to _amount\\r                        [1] uint256     if the current block exceeded the given parameter - it is cancelled\\r                        [2] uint8       (signature[128:130]) associated with the signer address and helps to validate if the signature is legit\\r                        [3] bytes32     (signature[0:64]) associated with the signer address and helps to validate if the signature is legit\\r                        [4] bytes32     (signature[64:128]) associated with the signer address and helps to validate if the signature is legit\\r                        if the array is empty (length == 0), then the gas-price limit is verified instead of the signature\\r \\r\",\"_to\":\"address/account on _toBlockchain to send the BNT to\\r\",\"_toBlockchain\":\"blockchain BNT will be issued on\\r\"},\"return\":\"the amount of BNT received from this conversion\\r\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/helpers/TestBancorNetwork.sol\":\"TestBancorNetwork\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/BancorNetwork.sol\":{\"keccak256\":\"0x3fd7f371d0becd1abf6ac74233eb684d7d7534f58ca92d46334879ef3f5368c5\",\"urls\":[\"bzzr://1b80abd5f4e5944e77b787877bbfdfb663fea7a8be5ec271d6efb0201e2749d2\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/ContractIds.sol\":{\"keccak256\":\"0xecc7d51589586df08d50ab31c581fb85d05b27a47e0d6907b51ca10f0cebcbd9\",\"urls\":[\"bzzr://1e6f48ff88a6925b1b8f86e577cd1354d2f4bcb1c7a371fc83d7829b2b2bc437\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/FeatureIds.sol\":{\"keccak256\":\"0xf45743ec73f6982aff22302af4a7bcce244bef0a3eb0aeacd8b32dad625bb454\",\"urls\":[\"bzzr://62d7b08633c4ca50e9cbfe0eafd6623cb6fc170278537f5c234069c0f9afa169\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/IBancorNetwork.sol\":{\"keccak256\":\"0xbea075ac6211af9d044f58068aac7ba337ab6c4c74238a39fb295e016f156578\",\"urls\":[\"bzzr://a512ad1920373e55297a38a08e8e3f36dd4a7d6f3d28f518b0af81ff6061d974\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/bancorx/interfaces/IBancorX.sol\":{\"keccak256\":\"0x23d2f7e6d9f9028d547860714cf0494ee508ba525f1d50ecdb05665a04908cea\",\"urls\":[\"bzzr://4062f3a5102874394adffa0b616e2f9bf7faa0dc37cc9611505e2943e451cc0a\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/converter/interfaces/IBancorConverter.sol\":{\"keccak256\":\"0x12fbc554708bc8025208e70b6fb45defc13dde848fb255c1b7f081e874a6e870\",\"urls\":[\"bzzr://6ff0ca8278f418fe34f58facaf6e3ee6643bc2b164ee4439d29f84c95728b072\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/converter/interfaces/IBancorFormula.sol\":{\"keccak256\":\"0x74e9b0c619770252c5bd6cbb5b707849c13cd9cb089689f003359a8d4538c063\",\"urls\":[\"bzzr://16e3303e7fb66363b4e6ce4b59066a3fec0882a0ea99775795cc819ae44d3a1d\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/converter/interfaces/IBancorGasPriceLimit.sol\":{\"keccak256\":\"0xe4beb2c3258ba72fb8a9e901fa451eaabde77a40ff540c18181b71b4149e7c88\",\"urls\":[\"bzzr://c867e635590ea2a27b60d80cd89bdca75fbd6a8d1c3abd894790464ea68d0435\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/helpers/TestBancorNetwork.sol\":{\"keccak256\":\"0xe887bd51059ef27deb3bec5fec1c924e1a35d57703eac94aa1640539d127ccfc\",\"urls\":[\"bzzr://0fb9024d0d79fc616cbc9175dad1f20617a00c6cd3100fcae6b868bfde9b17c9\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/token/interfaces/IERC20Token.sol\":{\"keccak256\":\"0x465f98ed290fb4f65f2d74e938f47c2fa9f7302e766266d8f9326d4c703d5ce3\",\"urls\":[\"bzzr://9746fbda9ee3a4d1e0ed3c5f5d27ebb93114139ad29ae04f313de057f9d1bc92\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/token/interfaces/IEtherToken.sol\":{\"keccak256\":\"0x7219a36940e2768913dc856d405f46378697b600fbd86717d8a444e701797bce\",\"urls\":[\"bzzr://473180ce9909ef17c50f675b7092a127114e9138409294f92a062566e6927ae3\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/token/interfaces/INonStandardERC20.sol\":{\"keccak256\":\"0x26596dd8e564493f7e821102865fb382c21bbedd44ebc920c8d63626f1bf19dc\",\"urls\":[\"bzzr://c750029c9ba7521fbe0c1827a4854a4b8db274d4402e00daaa4683a024c44d93\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/token/interfaces/ISmartToken.sol\":{\"keccak256\":\"0xd9369c561a659cdf78c9b7ad6458c5fd566296bc743f06011b5b02ffeadf0310\",\"urls\":[\"bzzr://b3f5f823967d07420b2c919fb28a51f94206f541124f4f63d835285d0fff8910\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/Owned.sol\":{\"keccak256\":\"0x599f08617f7ec2d1e250ec6f90852319cb94944d82026c459bb66a39c93138bf\",\"urls\":[\"bzzr://0e04734a4b9a2343cea3476f13d616b0fcf174e76bd0fc5478335786e0336bef\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/SafeMath.sol\":{\"keccak256\":\"0x1da299da4f5b50ea11c19a98ff519e8a7c2626222105cbfa0b3c6bbbd726ab7d\",\"urls\":[\"bzzr://e49efd2cc2a188b1fc641ebcdaf1bb262904e45060deb343c4d59ca4dac63034\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/TokenHolder.sol\":{\"keccak256\":\"0x0270b93239724e365013de7692a4489083c747352cd3564c6492ae61ae704559\",\"urls\":[\"bzzr://c41fcc0b55fea724c76fac1d946844c2f7e1086999016e89e95d4d2175dac11d\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/Utils.sol\":{\"keccak256\":\"0xc6c712f4e559fe6c03d9f84aebc93869bf48ec740355bc4add307e0bbbc41edc\",\"urls\":[\"bzzr://d61b1565f341056ca6a4dd33640327bb55e698c2785c4606972da2acccf439f0\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/interfaces/IAddressList.sol\":{\"keccak256\":\"0x3de4d53e90ce340cf45e9fde143fa6956ff0ab2c40a8ac7f155995ab09736390\",\"urls\":[\"bzzr://cc8bbe33aa156cd273b4f60ef678bd489c9a052962323c48ae571625ec5f686a\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/interfaces/IContractFeatures.sol\":{\"keccak256\":\"0x021e780f03961a8498409da5e57e36844bb6d06e6c6acf8a895f23c4c260b33e\",\"urls\":[\"bzzr://825b4d839d0bca34665f11c61b52de5887cb068302a4cbd262c5bf994b16940d\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/interfaces/IContractRegistry.sol\":{\"keccak256\":\"0x4fc9f35a48ef73f00d5ea0a6fb2018eb5801f1c5b828935a34cfebf479084c86\",\"urls\":[\"bzzr://3f880643a62ae35a2592ea2f079452a9276dc1d54d5d1c33462738109c787db5\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/interfaces/IOwned.sol\":{\"keccak256\":\"0x3bfadfd06a9f37a8687474694252513f00d84ff9074c9d3c69c311d62686e588\",\"urls\":[\"bzzr://b168ba3d91c3119b53b54679bec05592fe124e42f2345e785a4fd08c8225b39e\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/interfaces/ITokenHolder.sol\":{\"keccak256\":\"0x894a791236cbfdc5fd00d2d48f5be0b988d98804b89d9ce3f3c3c90477d590a1\",\"urls\":[\"bzzr://30f405a05448cc0f2efa99e3fc61ff424a8b6c1cee5c2ad05b5542fe41b58b39\"]},\"/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/utility/interfaces/IWhitelist.sol\":{\"keccak256\":\"0x6f2de503926432c5e49191520bdb0c0463ed69924287529b0f83ef95565287fb\",\"urls\":[\"bzzr://75da01831a1c6509463537ea59b0cfc88349b8ebb5d3fc56a1260d0e1953acdc\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061020b5763ffffffff60e060020a60003504166302ef521e8114610210578063046dc166146102385780630c8496cc146102595780630c87355e146102c95780631134269a146102f05780631d000b611461036d57806325f9bfef146103825780632978c10e146103975780634de006cb1461040e578063569706eb146104ba5780635a46f06c1461051d5780635b7633d0146105325780635d732ff2146105635780635e35359e1461057857806362614ae6146105a25780636896b999146105b7578063699e7546146106325780636b08f2ef146106475780636d7bd3fc146106be57806379ba5097146106d35780637b103999146106e85780638077ccf7146106fd57806383315b6e1461073257806389e63a60146107475780638da5cb5b1461075f5780639232494e146107745780639249993a1461078957806392d1abb71461079e57806398e95740146107b3578063a91ee0dc146107c8578063ab6214ce146107e9578063b1e9932b14610853578063b406d386146108be578063c4a8598e1461093b578063c52173de14610950578063c7ba24bc146109af578063c98fefed14610a0d578063cc97b38f14610a6b578063ce20096314610a80578063d4ee1d9014610b1d578063e57738e514610b32578063f2fde38b14610ba2578063f3898a9714610bc3578063f3bc7d2a14610c14578063f5286b9c14610c2c575b600080fd5b34801561021c57600080fd5b50610236600160a060020a03600435166024351515610c41565b005b34801561024457600080fd5b50610236600160a060020a0360043516610cb2565b34801561026557600080fd5b50604080516020600480358082013583810280860185019096528085526102b0953695939460249493850192918291850190849080828437509497505093359450610d279350505050565b6040805192835260208301919091528051918290030190f35b3480156102d557600080fd5b506102de6114f2565b60408051918252519081900360200190f35b604080516020600480358082013583810280860185019096528085526102de9536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a0360408201351692506060810135915060808101359060ff60a0820135169060c08101359060e00135611516565b34801561037957600080fd5b506102de611542565b34801561038e57600080fd5b506102de611566565b3480156103a357600080fd5b50604080516020600480358082013583810280860185019096528085526102de9536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a0360408201358116935060608201351691506080013561158a565b604080516020600480358082013583810280860185019096528085526102de953695939460249493850192918291850190849080828437505060408051602060608901358a01803582810280850184018652818552999c8b359c848d01359c96870135600160a060020a03169b919a5098506080909501965092945081019282918501908490808284375094975050508335600160a060020a03169450505060209091013590506115ce565b604080516020600480358082013583810280860185019096528085526102de9536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a0360408201351692506060013590506116ec565b34801561052957600080fd5b506102de611706565b34801561053e57600080fd5b5061054761172a565b60408051600160a060020a039092168252519081900360200190f35b34801561056f57600080fd5b506102de611739565b34801561058457600080fd5b50610236600160a060020a036004358116906024351660443561173f565b3480156105ae57600080fd5b506102de61181c565b604080516020600480358082013583810280860185019096528085526102de9536959394602494938501929182918501908490808284375094975050843595505050602083013592604081013592506060810135915060808101359060a08101359060ff60c0820135169060e0810135906101000135611840565b34801561063e57600080fd5b506102b0611872565b604080516020600480358082013583810280860185019096528085526102de9536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a0360408201351692506060810135915060ff6080820135169060a08101359060c00135611897565b3480156106ca57600080fd5b506102de6118ba565b3480156106df57600080fd5b506102366118de565b3480156106f457600080fd5b50610547611966565b34801561070957600080fd5b5061071e600160a060020a0360043516611975565b604080519115158252519081900360200190f35b34801561073e57600080fd5b506102de61198a565b34801561075357600080fd5b5061071e6004356119ae565b34801561076b57600080fd5b506105476119c3565b34801561078057600080fd5b506102de6119d2565b34801561079557600080fd5b506102de6119f6565b3480156107aa57600080fd5b506102de611a1a565b3480156107bf57600080fd5b506102b0611a1f565b3480156107d457600080fd5b50610236600160a060020a0360043516611a3c565b604080516020600480358082013583810280860185019096528085526102de9536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a03604082013581169350606082013516915060800135611ab1565b34801561085f57600080fd5b50604080516020600480358082013583810280860185019096528085526102de953695939460249493850192918291850190849080828437509497505084359550505060208301359260400135600160a060020a03169150611ad99050565b604080516020600480358082013583810280860185019096528085526102de9536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a0360408201351692506060810135915060808101359060ff60a0820135169060c08101359060e00135611af3565b34801561094757600080fd5b506102de611b09565b604080516020600480358082013583810280860185019096528085526102de9536959394602494938501929182918501908490808284375094975050843595505050602083013592604081013592506060810135915060800135611b2d565b3480156109bb57600080fd5b50604080516020600480358082013583810280860185019096528085526102de95369593946024949385019291829185019084908082843750949750508435955050506020909201359150611b4a9050565b604080516020600480358082013583810280860185019096528085526102de953695939460249493850192918291850190849080828437509497505084359550505060208301359260400135600160a060020a03169150611b629050565b348015610a7757600080fd5b506102de611b73565b604080516020600480358082013583810280860185019096528085526102de95369593946024949385019291829185019084908082843750506040805160a088013589018035602081810284810182018652828552999c8b359c828d01359c968701359b60608801359b5060808801359a50919850965060c09095019492810192829185019084908082843750949750611b979650505050505050565b348015610b2957600080fd5b50610547611e1e565b348015610b3e57600080fd5b50604080516020600480358082013583810280860185019096528085526102de9536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a036040820135169250606001359050611e2d565b348015610bae57600080fd5b50610236600160a060020a0360043516611e3d565b604080516020600480358082013583810280860185019096528085526102de95369593946024949385019291829185019084908082843750949750508435955050506020909201359150611e9e9050565b348015610c2057600080fd5b50610236600435611eae565b348015610c3857600080fd5b506102de611eda565b600054600160a060020a03163314610c5857600080fd5b81600160a060020a0381161515610c6e57600080fd5b82600160a060020a038116301415610c8557600080fd5b5050600160a060020a03919091166000908152600560205260409020805460ff1916911515919091179055565b600054600160a060020a03163314610cc957600080fd5b80600160a060020a0381161515610cdf57600080fd5b81600160a060020a038116301415610cf657600080fd5b50506003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600080600080600080600080600080600080600080600460009054906101000a9004600160a060020a0316600160a060020a03166321f8a7217f42616e636f72466f726d756c61000000000000000000000000000000000000006040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b158015610dc257600080fd5b505af1158015610dd6573d6000803e3d6000fd5b505050506040513d6020811015610dec57600080fd5b810190808051906020019092919050505091508e97508f6000815181101515610e1157fe5b906020019060200201519b50600190505b8f518110156114dc578f81815181101515610e3957fe5b906020019060200201519a508f81600101815181101515610e5657fe5b9060200190602002015199508a600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610ea057600080fd5b505af1158015610eb4573d6000803e3d6000fd5b505050506040513d6020811015610eca57600080fd5b50519850600160a060020a038a8116908c1614156111f05782600160a060020a03168b600160a060020a031614610f6a578a600160a060020a03166318160ddd6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610f3957600080fd5b505af1158015610f4d573d6000803e3d6000fd5b505050506040513d6020811015610f6357600080fd5b5051610f6c565b855b9550610f78898d611efe565b1515610f8357600080fd5b88600160a060020a031663d89595128d6040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015610fde57600080fd5b505af1158015610ff2573d6000803e3d6000fd5b505050506040513d602081101561100857600080fd5b50519450611016898d611f9d565b604080517f29a00e7c000000000000000000000000000000000000000000000000000000008152600481018990526024810188905263ffffffff83166044820152606481018b90529051919550600160a060020a038416916329a00e7c916084808201926020929091908290030181600087803b15801561109657600080fd5b505af11580156110aa573d6000803e3d6000fd5b505050506040513d60208110156110c057600080fd5b5051604080517f579cd3ca000000000000000000000000000000000000000000000000000000008152905191995061117691620f42409161116a91600160a060020a038e169163579cd3ca9160048083019260209291908290030181600087803b15801561112d57600080fd5b505af1158015611141573d6000803e3d6000fd5b505050506040513d602081101561115757600080fd5b50518b9063ffffffff9081169061203c16565b9063ffffffff61207516565b96508688039750878b600160a060020a03166318160ddd6040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156111bc57600080fd5b505af11580156111d0573d6000803e3d6000fd5b505050506040513d60208110156111e657600080fd5b50510195506114cc565b8a600160a060020a03168c600160a060020a031614156114ba5782600160a060020a03168b600160a060020a031614611292578a600160a060020a03166318160ddd6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561126157600080fd5b505af1158015611275573d6000803e3d6000fd5b505050506040513d602081101561128b57600080fd5b5051611294565b855b955088600160a060020a031663d89595128b6040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b1580156112f157600080fd5b505af1158015611305573d6000803e3d6000fd5b505050506040513d602081101561131b57600080fd5b50519450611329898b611f9d565b604080517f49f9b0f7000000000000000000000000000000000000000000000000000000008152600481018990526024810188905263ffffffff83166044820152606481018b90529051919550600160a060020a038416916349f9b0f7916084808201926020929091908290030181600087803b1580156113a957600080fd5b505af11580156113bd573d6000803e3d6000fd5b505050506040513d60208110156113d357600080fd5b5051604080517f579cd3ca000000000000000000000000000000000000000000000000000000008152905191995061144091620f42409161116a91600160a060020a038e169163579cd3ca9160048083019260209291908290030181600087803b15801561112d57600080fd5b96508688039750878b600160a060020a03166318160ddd6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561148657600080fd5b505af115801561149a573d6000803e3d6000fd5b505050506040513d60208110156114b057600080fd5b50510395506114cc565b6114c6898d8c8b612098565b90985096505b989a508a988a9250600201610e22565b50959e949d50939b505050505050505050505050565b7f42616e636f72436f6e766572746572557067726164657200000000000000000081565b60006115348a8a8a8a61152c8e8c8b8b8b6121b6565b6000806115ce565b9a9950505050505050505050565b7f424e54546f6b656e00000000000000000000000000000000000000000000000081565b7f436f6e747261637452656769737472790000000000000000000000000000000081565b60008087600081518110151561159c57fe5b9060200190602002015190506115b48133308a6122a5565b6115c2888888888888611ab1565b98975050505050505050565b60008060006115df8a88898961263e565b6116038a60008151811015156115f157fe5b906020019060200201518a6000612a9c565b6116108a8a8a8888612b4a565b91508960018b510381518110151561162457fe5b6020908102909101810151600160a060020a0381166000908152600590925260409091205490915060ff16156116d45780600160a060020a031663205c287888846040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b1580156116b757600080fd5b505af11580156116cb573d6000803e3d6000fd5b505050506116df565b6116df818884612f55565b5098975050505050505050565b60006116fc868686338787611ab1565b9695505050505050565b7f42616e636f72436f6e766572746572466163746f72790000000000000000000081565b600354600160a060020a031681565b60025481565b600054600160a060020a0316331461175657600080fd5b82600160a060020a038116151561176c57600080fd5b82600160a060020a038116151561178257600080fd5b83600160a060020a03811630141561179957600080fd5b85600160a060020a031663a9059cbb86866040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b1580156117fc57600080fd5b505af1158015611810573d6000803e3d6000fd5b50505050505050505050565b7f424e54436f6e766572746572000000000000000000000000000000000000000081565b600060606118518b878787876121b6565b90506118628c8c8c8c8c8c87611b97565b9c9b505050505050505050505050565b600854600090819061188f90600160a060020a0316828080612098565b915091509091565b60006118ad8989898961152c8d8b8b8b8b6121b6565b9998505050505050505050565b7f42616e636f72466f726d756c610000000000000000000000000000000000000081565b600154600160a060020a031633146118f557600080fd5b60015460008054604051600160a060020a0393841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600454600160a060020a031681565b60056020526000908152604090205460ff1681565b7f436f6e747261637446656174757265730000000000000000000000000000000081565b60066020526000908152604090205460ff1681565b600054600160a060020a031681565b7f42616e636f724e6574776f726b0000000000000000000000000000000000000081565b7f42616e636f7247617350726963654c696d69740000000000000000000000000081565b600181565b600754600090819061188f90600160a060020a0316828080612098565b600054600160a060020a03163314611a5357600080fd5b80600160a060020a0381161515611a6957600080fd5b81600160a060020a038116301415611a8057600080fd5b50506004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000611ace87878787611ac786808080806121b6565b88886115ce565b979650505050505050565b6000611aea8585858560008061158a565b95945050505050565b60006115348a8a8a8a61152c8b8b8b8b8b6121b6565b7f42616e636f72580000000000000000000000000000000000000000000000000081565b6000611ace878787878787611b4588808080806121b6565b611b97565b6000611b5a848484600080611e2d565b949350505050565b6000611aea85858585600080611ab1565b7f42616e636f72585570677261646572000000000000000000000000000000000081565b600080825160001480611bc1575087836000815181101515611bb557fe5b90602001906020020151145b1515611bcc57600080fd5b611bd88933308661263e565b600480546040805160e260020a632ecd14d30281527f424e54546f6b656e0000000000000000000000000000000000000000000000009381019390935251600160a060020a039091169163bb34534c9160248083019260209291908290030181600087803b158015611c4957600080fd5b505af1158015611c5d573d6000803e3d6000fd5b505050506040513d6020811015611c7357600080fd5b50518951600160a060020a03909116908a906000198101908110611c9357fe5b60209081029091010151600160a060020a031614611cb057600080fd5b611cd4896000815181101515611cc257fe5b90602001906020020151896001612a9c565b611ce2898989600080612b4a565b600480546040805160e260020a632ecd14d30281527f42616e636f7258000000000000000000000000000000000000000000000000009381019390935251929350600160a060020a03169163bb34534c916024808201926020929091908290030181600087803b158015611d5557600080fd5b505af1158015611d69573d6000803e3d6000fd5b505050506040513d6020811015611d7f57600080fd5b5051604080517f427c0374000000000000000000000000000000000000000000000000000000008152600481018990526024810188905260448101849052606481018790529051600160a060020a039092169163427c03749160848082019260009290919082900301818387803b158015611df957600080fd5b505af1158015611e0d573d6000803e3d6000fd5b50929b9a5050505050505050505050565b600154600160a060020a031681565b60006116fc86868633878761158a565b600054600160a060020a03163314611e5457600080fd5b600054600160a060020a0382811691161415611e6f57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000611b5a8484846000806116ec565b600054600160a060020a03163314611ec557600080fd5b620f4240811115611ed557600080fd5b600255565b7f4e6f6e5374616e64617264546f6b656e5265676973747279000000000000000081565b60008060008060008087600160a060020a0316630e53aae9886040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a0316815260200191505060a060405180830381600087803b158015611f6257600080fd5b505af1158015611f76573d6000803e3d6000fd5b505050506040513d60a0811015611f8c57600080fd5b506060015198975050505050505050565b60008060008060008087600160a060020a0316630e53aae9886040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a0316815260200191505060a060405180830381600087803b15801561200157600080fd5b505af1158015612015573d6000803e3d6000fd5b505050506040513d60a081101561202b57600080fd5b506020015198975050505050505050565b60008083151561204f576000915061206e565b5082820282848281151561205f57fe5b041461206a57600080fd5b8091505b5092915050565b60008080831161208457600080fd5b828481151561208f57fe5b04949350505050565b6000806120a3613816565b604080517f67657452657475726e28616464726573732c616464726573732c75696e74323581527f36290000000000000000000000000000000000000000000000000000000000006020808301919091528251918290036022018220600160a060020a03808b166024850152891660448401526064808401899052845180850390910181526084909301845290820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000060e060020a9384900490930292909216919091178152815191929184918b5afa80151561219f57600080fd5b505080516020909101519097909650945050505050565b60608060ff85161580156121c8575083155b80156121d2575082155b156121ed57604080516000815260208101909152915061229b565b60408051600580825260c08201909252906020820160a0803883390190505090508681600081518110151561221e57fe5b60209081029091010152805186908290600190811061223957fe5b60209081029091010152805160ff8616908290600290811061225757fe5b60209081029091010152805184908290600390811061227257fe5b60209081029091010152805183908290600490811061228d57fe5b602090810290910101529050805b5095945050505050565b600480546040805160e260020a632ecd14d30281527f4e6f6e5374616e64617264546f6b656e52656769737472790000000000000000938101939093525160009283928392600160a060020a039091169163bb34534c91602480830192602092919082900301818787803b15801561231c57600080fd5b505af1158015612330573d6000803e3d6000fd5b505050506040513d602081101561234657600080fd5b5051604080517faeea10bd000000000000000000000000000000000000000000000000000000008152600160a060020a038a8116600483015291519295509085169163aeea10bd916024808201926020929091908290030181600087803b1580156123b057600080fd5b505af11580156123c4573d6000803e3d6000fd5b505050506040513d60208110156123da57600080fd5b50511561258d5786600160a060020a03166370a08231866040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b15801561243c57600080fd5b505af1158015612450573d6000803e3d6000fd5b505050506040513d602081101561246657600080fd5b5051604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a0389811660048301528881166024830152604482018890529151929450908916916323b872dd9160648082019260009290919082900301818387803b1580156124de57600080fd5b505af11580156124f2573d6000803e3d6000fd5b5050505086600160a060020a03166370a08231866040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b15801561255157600080fd5b505af1158015612565573d6000803e3d6000fd5b505050506040513d602081101561257b57600080fd5b5051905081811161258857fe5b612635565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a0388811660048301528781166024830152604482018790529151918916916323b872dd916064808201926020929091908290030181600087803b15801561260157600080fd5b505af1158015612615573d6000803e3d6000fd5b505050506040513d602081101561262b57600080fd5b5051151561263557fe5b50505050505050565b60008060008060006002895111801561265957506015895111155b801561266a57508851600290066001145b151561267557600080fd5b600480546040805160e260020a632ecd14d30281527f436f6e74726163744665617475726573000000000000000000000000000000009381019390935251600160a060020a039091169163bb34534c9160248083019260209291908290030181600087803b1580156126e657600080fd5b505af11580156126fa573d6000803e3d6000fd5b505050506040513d602081101561271057600080fd5b50519450600193505b885184101561295e57888481518110151561273057fe5b90602001906020020151600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561277757600080fd5b505af115801561278b573d6000803e3d6000fd5b505050506040513d60208110156127a157600080fd5b5051604080517fa5fbf287000000000000000000000000000000000000000000000000000000008152600160a060020a0380841660048301526001602483015291519295509087169163a5fbf287916044808201926020929091908290030181600087803b15801561281257600080fd5b505af1158015612826573d6000803e3d6000fd5b505050506040513d602081101561283c57600080fd5b5051156129535782600160a060020a031663c45d3d926040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561288157600080fd5b505af1158015612895573d6000803e3d6000fd5b505050506040513d60208110156128ab57600080fd5b50519150600160a060020a0382161580612948575081600160a060020a0316633af32abf886040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b15801561291b57600080fd5b505af115801561292f573d6000803e3d6000fd5b505050506040513d602081101561294557600080fd5b50515b151561295357600080fd5b600284019350612719565b8551600511612977576129728989886132d4565b612a91565b600480546040805160e260020a632ecd14d30281527f42616e636f7247617350726963654c696d6974000000000000000000000000009381019390935251600160a060020a039091169163bb34534c9160248083019260209291908290030181600087803b1580156129e857600080fd5b505af11580156129fc573d6000803e3d6000fd5b505050506040513d6020811015612a1257600080fd5b5051604080517f6b4dff1f0000000000000000000000000000000000000000000000000000000081523a60048201529051919250600160a060020a03831691636b4dff1f9160248082019260009290919082900301818387803b158015612a7857600080fd5b505af1158015612a8c573d6000803e3d6000fd5b505050505b505050505050505050565b6000341115612b33573482148015612acc5750600160a060020a03831660009081526005602052604090205460ff165b1515612ad757600080fd5b82600160a060020a031663d0e30db0346040518263ffffffff1660e060020a0281526004016000604051808303818588803b158015612b1557600080fd5b505af1158015612b29573d6000803e3d6000fd5b5050505050612b45565b8015612b4557612b45833330856122a5565b505050565b845160009085906000190182808080600160a060020a0389161515612b7d578715612b7457600080fd5b60009350612c3a565b876000108015612b8f57506002548811155b1515612b9a57600080fd5b600480546040805160e260020a632ecd14d30281527f424e54546f6b656e0000000000000000000000000000000000000000000000009381019390935251600160a060020a039091169163bb34534c9160248083019260209291908290030181600087803b158015612c0b57600080fd5b505af1158015612c1f573d6000803e3d6000fd5b505050506040513d6020811015612c3557600080fd5b505193505b600292505b848311612f45578b60018403815181101515612c5757fe5b90602001906020020151600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015612c9e57600080fd5b505af1158015612cb2573d6000803e3d6000fd5b505050506040513d6020811015612cc857600080fd5b50518c519092508c906001198501908110612cdf57fe5b90602001906020020151600160a060020a03168c60018503815181101515612d0357fe5b60209081029091010151600160a060020a031614612d4057612d408c60028503815181101515612d2f57fe5b9060200190602002015183886135e1565b81600160a060020a0316635e5144eb8d60028603815181101515612d6057fe5b906020019060200201518e86815181101515612d7857fe5b9060200190602002015189898814612d91576001612d93565b8e5b6040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184600160a060020a0316600160a060020a03168152602001838152602001828152602001945050505050602060405180830381600087803b158015612e0557600080fd5b505af1158015612e19573d6000803e3d6000fd5b505050506040513d6020811015612e2f57600080fd5b50518c51909650600160a060020a038516908d9085908110612e4d57fe5b90602001906020020151600160a060020a03161415612f3a57612e7d620f424061116a888b63ffffffff61203c16565b90508b83815181101515612e8d57fe5b90602001906020020151600160a060020a031663a9059cbb8a836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015612ef957600080fd5b505af1158015612f0d573d6000803e3d6000fd5b505050506040513d6020811015612f2357600080fd5b50511515612f3057600080fd5b8086039550600093505b600283019250612c3f565b50939a9950505050505050505050565b600480546040805160e260020a632ecd14d30281527f4e6f6e5374616e64617264546f6b656e52656769737472790000000000000000938101939093525160009283928392600160a060020a039091169163bb34534c91602480830192602092919082900301818787803b158015612fcc57600080fd5b505af1158015612fe0573d6000803e3d6000fd5b505050506040513d6020811015612ff657600080fd5b5051604080517faeea10bd000000000000000000000000000000000000000000000000000000008152600160a060020a03898116600483015291519295509085169163aeea10bd916024808201926020929091908290030181600087803b15801561306057600080fd5b505af1158015613074573d6000803e3d6000fd5b505050506040513d602081101561308a57600080fd5b5051156132355785600160a060020a03166370a08231866040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b1580156130ec57600080fd5b505af1158015613100573d6000803e3d6000fd5b505050506040513d602081101561311657600080fd5b5051604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0388811660048301526024820188905291519294509088169163a9059cbb9160448082019260009290919082900301818387803b15801561318657600080fd5b505af115801561319a573d6000803e3d6000fd5b5050505085600160a060020a03166370a08231866040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b1580156131f957600080fd5b505af115801561320d573d6000803e3d6000fd5b505050506040513d602081101561322357600080fd5b5051905081811161323057fe5b6132cc565b85600160a060020a031663a9059cbb86866040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561329857600080fd5b505af11580156132ac573d6000803e3d6000fd5b505050506040513d60208110156132c257600080fd5b505115156132cc57fe5b505050505050565b60008060008360018151811015156132e857fe5b90602001906020020151925082431115151561330357600080fd5b823a863387600081518110151561331657fe5b906020019060200201518a6040516020018087815260200186815260200185600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140184600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401838152602001828051906020019060200280838360005b838110156133b1578181015183820152602001613399565b5050505090500196505050505050506040516020818303038152906040526040518082805190602001908083835b602083106133fe5780518252601f1990920191602091820191016133df565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912060008181526006909252929020549195505060ff16159150613449905057600080fd5b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c80830186905283518084039091018152605c90920192839052815191929182918401908083835b602083106134bf5780518252601f1990920191602091820191016134a0565b5181516020939093036101000a600019018019909116921691909117905260405192018290039091206003548851919550600160a060020a03169350600192508491508790600290811061350f57fe5b9060200190602002015187600381518110151561352857fe5b6020908102909101015188518990600490811061354157fe5b60209081029091018101516040805160008082528185018084529790975260ff9095168582015260608501939093526080840152905160a0808401949293601f19830193908390039091019190865af11580156135a2573d6000803e3d6000fd5b50505060206040510351600160a060020a03161415156135c157600080fd5b506000908152600660205260409020805460ff1916600117905550505050565b604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a0384811660248301529151839286169163dd62ed3e9160448083019260209291908290030181600087803b15801561364c57600080fd5b505af1158015613660573d6000803e3d6000fd5b505050506040513d602081101561367657600080fd5b50511061368257612b45565b604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a03848116602483015291519185169163dd62ed3e916044808201926020929091908290030181600087803b1580156136ed57600080fd5b505af1158015613701573d6000803e3d6000fd5b505050506040513d602081101561371757600080fd5b50511561379f57604080517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a03848116600483015260006024830181905292519086169263095ea7b3926044808201939182900301818387803b15801561378657600080fd5b505af115801561379a573d6000803e3d6000fd5b505050505b82600160a060020a031663095ea7b383836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561380257600080fd5b505af1158015612635573d6000803e3d6000fd5b604080518082018252906002908290803883395091929150505600a165627a7a723058209113b8c8b18bdfd28b774b731c12a1823c40afc7c0dab583c5c695353ee247f60029",
  "sourceMap": "816:741:28:-;;;2119:5:5;2086:38;;2160:34;;;-1:-1:-1;;;;;;2160:34:5;;;969:232:28;5:2:-1;;;;30:1;27;20:12;5:2;969:232:28;;;;;;;;;;;;;;;;;;;560:5:49;:18;;568:10;-1:-1:-1;;;;;;560:18:49;;;;;;;2817:8:5;:20;;;;;-1:-1:-1;2817:20:5;;;969:232:28;1095:31;;:::i;:::-;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1074:18:28;:52;;-1:-1:-1;;;;;;1074:52:28;-1:-1:-1;;;;;1074:52:28;;;;;;;;;;1180:7;1189:4;1157:37;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1157:37:28;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1136:18:28;:58;;-1:-1:-1;;;;;;1136:58:28;-1:-1:-1;;;;;1136:58:28;;;;;;;;;;-1:-1:-1;816:741:28;;-1:-1:-1;816:741:28;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "816:741:28:-;;;;;;;;;-1:-1:-1;;;816:741:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4173:209:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4173:209:5;-1:-1:-1;;;;;4173:209:5;;;;;;;;;;;3736:210;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3736:210:5;-1:-1:-1;;;;;3736:210:5;;;;;18288:2844;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;18288:2844:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18288:2844:5;;-1:-1:-1;;18288:2844:5;;;-1:-1:-1;18288:2844:5;;-1:-1:-1;;;;18288:2844:5;;;;;;;;;;;;;;;;;;;;;;;;669:77:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;669:77:6;;;;;;;;;;;;;;;;;;;;35224:455:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;35224:455:5;;-1:-1:-1;;35224:455:5;;;-1:-1:-1;;;35224:455:5;;;;;-1:-1:-1;;;;;35224:455:5;;;;;;-1:-1:-1;35224:455:5;;;;;-1:-1:-1;35224:455:5;;;;;;;;;;;;;;;;;;;;;;854:46:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;854:46:6;;;;287:62;;8:9:-1;5:2;;;30:1;27;20:12;5:2;287:62:6;;;;21988:633:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;21988:633:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21988:633:5;;-1:-1:-1;;21988:633:5;;;-1:-1:-1;;;21988:633:5;;;;;-1:-1:-1;;;;;21988:633:5;;;;;;;-1:-1:-1;21988:633:5;;;;;;-1:-1:-1;21988:633:5;;;;;8832:1147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8832:1147:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8832:1147:5;;;;-1:-1:-1;8832:1147:5;-1:-1:-1;8832:1147:5;;;;;-1:-1:-1;8832:1147:5;;-1:-1:-1;8832:1147:5;;;;;;;;;;;;;;-1:-1:-1;8832:1147:5;;-1:-1:-1;;;8832:1147:5;;-1:-1:-1;;;;;8832:1147:5;;-1:-1:-1;;;8832:1147:5;;;;;;-1:-1:-1;8832:1147:5;;23386:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23386:270:5;;-1:-1:-1;;23386:270:5;;;-1:-1:-1;;;23386:270:5;;;;;-1:-1:-1;;;;;23386:270:5;;;;;;-1:-1:-1;23386:270:5;;;;-1:-1:-1;23386:270:5;;753:75:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;753:75:6;;;;2160:34:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2160:34:5;;;;;;;;-1:-1:-1;;;;;2160:34:5;;;;;;;;;;;;;;2086:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2086:38:5;;;;1264:260:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1264:260:51;-1:-1:-1;;;;;1264:260:51;;;;;;;;;;;;907:54:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;907:54:6;;;;33326:768:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;33326:768:5;;-1:-1:-1;;33326:768:5;;;-1:-1:-1;;;33326:768:5;;;;;;;;;;-1:-1:-1;33326:768:5;;;;;-1:-1:-1;33326:768:5;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:171:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1384:171:28;;;;34712:438:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;34712:438:5;;-1:-1:-1;;34712:438:5;;;-1:-1:-1;;;34712:438:5;;;;;-1:-1:-1;;;;;34712:438:5;;;;;;-1:-1:-1;34712:438:5;;;;;-1:-1:-1;34712:438:5;;;;;;;;;;;;;;;;;529:56:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;529:56:6;;;;1194:187:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1194:187:49;;;;2275:33:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2275:33:5;;;;2364:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2364:44:5;-1:-1:-1;;;;;2364:44:5;;;;;;;;;;;;;;;;;;;;;;;218:62:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;218:62:6;;;;2459:49:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2459:49:5;;;;;168:20:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;168:20:49;;;;466:56:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;466:56:6;;;;592:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;592:70:6;;;;269:63:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;269:63:7;;;;1207:171:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1207:171:28;;;;3398:190:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3398:190:5;-1:-1:-1;;;;;3398:190:5;;;;;6614:331;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6614:331:5;;-1:-1:-1;;6614:331:5;;;-1:-1:-1;;;6614:331:5;;;;;-1:-1:-1;;;;;6614:331:5;;;;;;;-1:-1:-1;6614:331:5;;;;;;-1:-1:-1;6614:331:5;;;;;32985:267;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;32985:267:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32985:267:5;;-1:-1:-1;;32985:267:5;;;-1:-1:-1;;;32985:267:5;;;;;;;;-1:-1:-1;;;;;32985:267:5;;-1:-1:-1;32985:267:5;;-1:-1:-1;32985:267:5;34168:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;34168:470:5;;-1:-1:-1;;34168:470:5;;;-1:-1:-1;;;34168:470:5;;;;;-1:-1:-1;;;;;34168:470:5;;;;;;-1:-1:-1;34168:470:5;;;;;-1:-1:-1;34168:470:5;;;;;;;;;;;;;;;;;;;;;;986:44:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;986:44:6;;;;10940:409:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10940:409:5;;-1:-1:-1;;10940:409:5;;;-1:-1:-1;;;10940:409:5;;;;;;;;;;-1:-1:-1;10940:409:5;;;;;-1:-1:-1;10940:409:5;;;;;32346:232;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;32346:232:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32346:232:5;;-1:-1:-1;;32346:232:5;;;-1:-1:-1;;;32346:232:5;;;;;;-1:-1:-1;32346:232:5;;-1:-1:-1;32346:232:5;32652:259;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32652:259:5;;-1:-1:-1;;32652:259:5;;;-1:-1:-1;;;32652:259:5;;;;;;;;-1:-1:-1;;;;;32652:259:5;;-1:-1:-1;32652:259:5;;-1:-1:-1;32652:259:5;1037:61:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1037:61:6;;;;13328:1144:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13328:1144:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13328:1144:5;;;;;-1:-1:-1;13328:1144:5;;-1:-1:-1;13328:1144:5;-1:-1:-1;13328:1144:5;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13328:1144:5;;-1:-1:-1;13328:1144:5;;-1:-1:-1;;;;;;;13328:1144:5;195:23:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;195:23:49;;;;24426:278:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;24426:278:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24426:278:5;;-1:-1:-1;;24426:278:5;;;-1:-1:-1;;;24426:278:5;;;;;-1:-1:-1;;;;;24426:278:5;;;;;;-1:-1:-1;24426:278:5;;;;-1:-1:-1;24426:278:5;;963:140:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;963:140:49;-1:-1:-1;;;;;963:140:49;;;;;32048:224:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32048:224:5;;-1:-1:-1;;32048:224:5;;;-1:-1:-1;;;32048:224:5;;;;;;-1:-1:-1;32048:224:5;;-1:-1:-1;32048:224:5;3004:211;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3004:211:5;;;;;356:80:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;356:80:6;;;;4173:209:5;689:5:49;;-1:-1:-1;;;;;689:5:49;675:10;:19;667:28;;;;;;4294:6:5;-1:-1:-1;;;;;458:22:52;;;;450:31;;;;;;4319:6:5;-1:-1:-1;;;;;637:25:52;;657:4;637:25;;629:34;;;;;;-1:-1:-1;;;;;;;4343:19:5;;;;;;;;:11;:19;;;;;:31;;-1:-1:-1;;4343:31:5;;;;;;;;;;4173:209::o;3736:210::-;689:5:49;;-1:-1:-1;;;;;689:5:49;675:10;:19;667:28;;;;;;3843:14:5;-1:-1:-1;;;;;458:22:52;;;;450:31;;;;;;3876:14:5;-1:-1:-1;;;;;637:25:52;;657:4;637:25;;629:34;;;;;;-1:-1:-1;;3908:13:5;:30;;-1:-1:-1;;3908:30:5;-1:-1:-1;;;;;3908:30:5;;;;;;;;;;3736:210::o;18288:2844::-;18372:7;18381;18401:21;18433:22;18467:19;18497:26;18534:14;18559:11;18581:14;18606:15;18632:13;18656:26;18693:22;18904:9;18733:8;;;;;;;;;-1:-1:-1;;;;;18733:8:5;-1:-1:-1;;;;;18733:19:5;;18753:26;18733:47;;;;;-1:-1:-1;;;18733:47:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18733:47:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18733:47:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18733:47:5;;;;;;;;;;;;;;;;18693:88;;18803:7;18794:16;;18833:5;18839:1;18833:8;;;;;;;;;;;;;;;;;;18821:20;;18916:1;18904:13;;18899:2193;18923:5;:12;18919:1;:16;18899:2193;;;18985:5;18991:1;18985:8;;;;;;;;;;;;;;;;;;18960:34;;19019:5;19025:1;19029;19025:5;19019:12;;;;;;;;;;;;;;;;;;19009:22;;19075:10;-1:-1:-1;;;;;19075:16:5;;:18;;;;;-1:-1:-1;;;19075:18:5;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19075:18:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19075:18:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19075:18:5;;-1:-1:-1;;;;;;19115:21:5;;;;;;;19111:1892;;;19301:14;-1:-1:-1;;;;;19287:28:5;:10;-1:-1:-1;;;;;19287:28:5;;:64;;19327:10;-1:-1:-1;;;;;19327:22:5;;:24;;;;;-1:-1:-1;;;19327:24:5;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19327:24:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19327:24:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19327:24:5;19287:64;;;19318:6;19287:64;19278:73;;19415:45;19439:9;19450;19415:23;:45::i;:::-;19407:54;;;;;;;;19554:9;-1:-1:-1;;;;;19554:29:5;;19584:9;19554:40;;;;;-1:-1:-1;;;19554:40:5;;;;;;;-1:-1:-1;;;;;19554:40:5;-1:-1:-1;;;;;19554:40:5;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19554:40:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19554:40:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19554:40:5;;-1:-1:-1;19622:40:5;19641:9;19652;19622:18;:40::i;:::-;19690:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19613:49;;-1:-1:-1;;;;;;19690:31:5;;;;;:64;;;;;;;;;;;;;;;-1:-1:-1;19690:31:5;:64;;;5:2:-1;;;;30:1;27;20:12;5:2;19690:64:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19690:64:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19690:64:5;19790:25;;;;;;;;19690:64;;-1:-1:-1;19779:68:5;;2004:7;;19779:37;;-1:-1:-1;;;;;19790:23:5;;;;;:25;;;;;19690:64;;19790:25;;;;;;;;:23;:25;;;5:2:-1;;;;30:1;27;20:12;5:2;19790:25:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19790:25:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19790:25:5;19779:6;;:37;;;;;:10;:37;:::i;:::-;:41;:68;:41;:68;:::i;:::-;19773:74;;19876:3;19866:13;;;;20009:6;19982:10;-1:-1:-1;;;;;19982:22:5;;:24;;;;;-1:-1:-1;;;19982:24:5;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19982:24:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19982:24:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19982:24:5;:33;;-1:-1:-1;19111:1892:5;;;20067:10;-1:-1:-1;;;;;20054:23:5;:9;-1:-1:-1;;;;;20054:23:5;;20050:953;;;20243:14;-1:-1:-1;;;;;20229:28:5;:10;-1:-1:-1;;;;;20229:28:5;;:64;;20269:10;-1:-1:-1;;;;;20269:22:5;;:24;;;;;-1:-1:-1;;;20269:24:5;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20269:24:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20269:24:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20269:24:5;20229:64;;;20260:6;20229:64;20220:73;;20386:9;-1:-1:-1;;;;;20386:29:5;;20416:7;20386:38;;;;;-1:-1:-1;;;20386:38:5;;;;;;;-1:-1:-1;;;;;20386:38:5;-1:-1:-1;;;;;20386:38:5;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20386:38:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20386:38:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20386:38:5;;-1:-1:-1;20452:38:5;20471:9;20482:7;20452:18;:38::i;:::-;20518:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20443:47;;-1:-1:-1;;;;;;20518:27:5;;;;;:60;;;;;;;;;;;;;;;-1:-1:-1;20518:27:5;:60;;;5:2:-1;;;;30:1;27;20:12;5:2;20518:60:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20518:60:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20518:60:5;20614:25;;;;;;;;20518:60;;-1:-1:-1;20603:68:5;;2004:7;;20603:37;;-1:-1:-1;;;;;20614:23:5;;;;;:25;;;;;20518:60;;20614:25;;;;;;;;:23;:25;;;5:2:-1;;;;30:1;27;20:12;20603:68:5;20597:74;;20700:3;20690:13;;;;20833:6;20806:10;-1:-1:-1;;;;;20806:22:5;;:24;;;;;-1:-1:-1;;;20806:24:5;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20806:24:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20806:24:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20806:24:5;:33;;-1:-1:-1;20050:953:5;;;20939:48;20949:9;20960;20971:7;20980:6;20939:9;:48::i;:::-;20923:64;;-1:-1:-1;20923:64:5;-1:-1:-1;20050:953:5;21073:7;;-1:-1:-1;21073:7:5;;21036:10;;-1:-1:-1;18942:1:5;18937:6;18899:2193;;;-1:-1:-1;21112:6:5;;21120:3;;-1:-1:-1;18288:2844:5;;-1:-1:-1;;;;;;;;;;;;18288:2844:5:o;669:77:6:-;;;:::o;35224:455:5:-;35508:7;35557:114;35580:5;35587:7;35596:10;35608:4;35614:41;35627:7;35636:6;35644:2;35648;35652;35614:12;:41::i;:::-;35665:1;35669;35557:22;:114::i;:::-;35550:121;35224:455;-1:-1:-1;;;;;;;;;;35224:455:5:o;854:46:6:-;;;:::o;287:62::-;;;:::o;21988:633:5:-;22155:7;22417:21;22441:5;22447:1;22441:8;;;;;;;;;;;;;;;;;;22417:32;;22460:56;22479:9;22490:10;22502:4;22508:7;22460:18;:56::i;:::-;22534:79;22546:5;22553:7;22562:10;22574:4;22580:17;22599:13;22534:11;:79::i;:::-;22527:86;21988:633;-1:-1:-1;;;;;;;;21988:633:5:o;8832:1147::-;9136:7;9415:14;9739:19;9221:53;9244:5;9251:4;9257;9263:10;9221:22;:53::i;:::-;9316:37;9328:5;9334:1;9328:8;;;;;;;;;;;;;;;;;;9338:7;9347:5;9316:11;:37::i;:::-;9432:75;9446:5;9453:7;9462:10;9474:17;9493:13;9432;:75::i;:::-;9415:92;;9761:5;9782:1;9767:5;:12;:16;9761:23;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9799:20:5;;;;;;:11;:20;;;;;;;;9761:23;;-1:-1:-1;9799:20:5;;9795:150;;;9846:7;-1:-1:-1;;;;;9834:31:5;;9866:4;9872:6;9834:45;;;;;-1:-1:-1;;;9834:45:5;;;;;;;-1:-1:-1;;;;;9834:45:5;-1:-1:-1;;;;;9834:45:5;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9834:45:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9834:45:5;;;;9795:150;;;9908:37;9923:7;9932:4;9938:6;9908:14;:37::i;:::-;-1:-1:-1;9965:6:5;8832:1147;-1:-1:-1;;;;;;;;8832:1147:5:o;23386:270::-;23536:7;23563:85;23575:5;23582:7;23591:10;23603;23615:17;23634:13;23563:11;:85::i;:::-;23556:92;23386:270;-1:-1:-1;;;;;;23386:270:5:o;753:75:6:-;;;:::o;2160:34:5:-;;;-1:-1:-1;;;;;2160:34:5;;:::o;2086:38::-;;;;:::o;1264:260:51:-;689:5:49;;-1:-1:-1;;;;;689:5:49;675:10;:19;667:28;;;;;;1395:6:51;-1:-1:-1;;;;;458:22:52;;;;450:31;;;;;;1425:3:51;-1:-1:-1;;;;;458:22:52;;;;450:31;;;;;;1447:3:51;-1:-1:-1;;;;;637:25:52;;657:4;637:25;;629:34;;;;;;1486:6:51;-1:-1:-1;;;;;1468:34:51;;1503:3;1508:7;1468:48;;;;;-1:-1:-1;;;1468:48:51;;;;;;;-1:-1:-1;;;;;1468:48:51;-1:-1:-1;;;;;1468:48:51;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1468:48:51;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1468:48:51;;;;492:1:52;;706::49;1264:260:51;;;:::o;907:54:6:-;;;:::o;33326:768:5:-;33670:7;33757:26;33786:41;33799:7;33808:6;33816:2;33820;33824;33786:12;:41::i;:::-;33757:70;;33845:94;33866:5;33873:7;33882:10;33894:13;33909:3;33914:13;33929:9;33845:20;:94::i;:::-;33838:101;33326:768;-1:-1:-1;;;;;;;;;;;;33326:768:5:o;1384:171:28:-;1484:18;;1431:7;;;;1466:82;;-1:-1:-1;;;;;1484:18:28;1431:7;;;1466:9;:82::i;:::-;1459:89;;;;1384:171;;:::o;34712:438:5:-;34996:7;35028:114;35051:5;35058:7;35067:10;35079:4;35085:41;35098:7;35107:6;35115:2;35119;35123;35085:12;:41::i;35028:114::-;35021:121;34712:438;-1:-1:-1;;;;;;;;;34712:438:5:o;529:56:6:-;;;:::o;1194:187:49:-;1261:8;;-1:-1:-1;;;;;1261:8:49;1247:10;:22;1239:31;;;;;;1305:8;;;1298:5;;1286:28;;-1:-1:-1;;;;;1305:8:49;;;;1298:5;;;;1286:28;;;1333:8;;;;1325:16;;-1:-1:-1;;1325:16:49;;;-1:-1:-1;;;;;1333:8:49;;1325:16;;;;1352:21;;;1194:187::o;2275:33:5:-;;;-1:-1:-1;;;;;2275:33:5;;:::o;2364:44::-;;;;;;;;;;;;;;;:::o;218:62:6:-;;;:::o;2459:49:5:-;;;;;;;;;;;;;;;:::o;168:20:49:-;;;-1:-1:-1;;;;;168:20:49;;:::o;466:56:6:-;;;:::o;592:70::-;;;:::o;269:63:7:-;326:6;269:63;:::o;1207:171:28:-;1307:18;;1254:7;;;;1289:82;;-1:-1:-1;;;;;1307:18:28;1254:7;;;1289:9;:82::i;3398:190:5:-;689:5:49;;-1:-1:-1;;;;;689:5:49;675:10;:19;667:28;;;;;;3505:9:5;-1:-1:-1;;;;;458:22:52;;;;450:31;;;;;;3533:9:5;-1:-1:-1;;;;;637:25:52;;657:4;637:25;;629:34;;;;;;-1:-1:-1;;3560:8:5;:20;;-1:-1:-1;;3560:20:5;-1:-1:-1;;;;;3560:20:5;;;;;;;;;;3398:190::o;6614:331::-;6781:7;6808:129;6831:5;6838:7;6847:10;6859:4;6865:37;6781:7;;;;;6865:12;:37::i;:::-;6904:17;6923:13;6808:22;:129::i;:::-;6801:136;6614:331;-1:-1:-1;;;;;;;6614:331:5:o;32985:267::-;33144:7;33176:68;33196:5;33203:7;33212:10;33224:4;33238:1;33242;33176:19;:68::i;:::-;33169:75;32985:267;-1:-1:-1;;;;;32985:267:5:o;34168:470::-;34481:7;34513:117;34536:5;34543:7;34552:10;34564:4;34570:44;34583:10;34595:6;34603:2;34607;34611;34570:12;:44::i;986::6:-;;;:::o;10940:409:5:-;11187:7;11219:122;11240:5;11247:7;11256:10;11268:13;11283:3;11288:13;11303:37;11187:7;;;;;11303:12;:37::i;:::-;11219:20;:122::i;32346:232::-;32479:7;32511:59;32528:5;32535:7;32544:10;32564:1;32568;32511:16;:59::i;:::-;32504:66;32346:232;-1:-1:-1;;;;32346:232:5:o;32652:259::-;32811:7;32843:60;32855:5;32862:7;32871:10;32883:4;32897:1;32901;32843:11;:60::i;1037:61:6:-;;;:::o;13328:1144:5:-;13625:7;14196:14;13730:10;:17;13751:1;13730:22;:50;;;;13773:7;13756:10;13767:1;13756:13;;;;;;;;;;;;;;;;;;:24;13730:50;13722:59;;;;;;;;13854;13877:5;13884:10;13896:4;13902:10;13854:22;:59::i;:::-;14014:8;;;:41;;;-1:-1:-1;;;;;14014:41:5;;14033:21;14014:41;;;;;;;;-1:-1:-1;;;;;14014:8:5;;;;:18;;:41;;;;;;;;;;;;;;:8;;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;14014:41:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14014:41:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14014:41:5;13993:12;;-1:-1:-1;;;;;13987:68:5;;;;:5;;-1:-1:-1;;13993:16:5;;;13987:23;;;;;;;;;;;;;;;-1:-1:-1;;;;;13987:68:5;;13979:77;;;;;;14098:36;14110:5;14116:1;14110:8;;;;;;;;;;;;;;;;;;14120:7;14129:4;14098:11;:36::i;:::-;14213:56;14227:5;14234:7;14243:10;14263:1;14267;14213:13;:56::i;:::-;14344:8;;;:40;;;-1:-1:-1;;;;;14344:40:5;;14363:20;14344:40;;;;;;;;14196:73;;-1:-1:-1;;;;;;14344:8:5;;:18;;:40;;;;;;;;;;;;;;;:8;;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;14344:40:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14344:40:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14344:40:5;14335:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14335:60:5;;;;;;:103;;;;;;;;;;;;;;;;:60;:103;;;5:2:-1;;;;30:1;27;20:12;5:2;14335:103:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;14458:6:5;;13328:1144;-1:-1:-1;;;;;;;;;;;13328:1144:5:o;195:23:49:-;;;-1:-1:-1;;;;;195:23:49;;:::o;24426:278:5:-;24576:7;24603:93;24623:5;24630:7;24639:10;24651;24663:17;24682:13;24603:19;:93::i;963:140:49:-;689:5;;-1:-1:-1;;;;;689:5:49;675:10;:19;667:28;;;;;;1058:5;;-1:-1:-1;;;;;1045:18:49;;;1058:5;;1045:18;;1037:27;;;;;;1075:8;:20;;-1:-1:-1;;1075:20:49;-1:-1:-1;;;;;1075:20:49;;;;;;;;;;963:140::o;32048:224:5:-;32181:7;32213:51;32222:5;32229:7;32238:10;32258:1;32262;32213:8;:51::i;3004:211::-;689:5:49;;-1:-1:-1;;;;;689:5:49;675:10;:19;667:28;;;;;;2070:7:5;3117:44;;;3109:53;;;;;;3173:15;:34;3004:211::o;356:80:6:-;;;:::o;28964:449:5:-;29099:4;29121:22;29154:13;29178:28;29217:18;29246:10;29341;-1:-1:-1;;;;;29341:21:5;;29363:10;29341:33;;;;;-1:-1:-1;;;29341:33:5;;;;;;;-1:-1:-1;;;;;29341:33:5;-1:-1:-1;;;;;29341:33:5;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29341:33:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29341:33:5;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;29341:33:5;;;;28964:449;-1:-1:-1;;;;;;;;28964:449:5:o;28228:439::-;28358:6;28382:22;28415:13;28439:28;28478:18;28507:10;28602;-1:-1:-1;;;;;28602:21:5;;28624:10;28602:33;;;;;-1:-1:-1;;;28602:33:5;;;;;;;-1:-1:-1;;;;;28602:33:5;-1:-1:-1;;;;;28602:33:5;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28602:33:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28602:33:5;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;28602:33:5;;;;28228:439;-1:-1:-1;;;;;;;;28228:439:5:o;1071:234:50:-;1131:7;;1184;;1180:34;;;1213:1;1206:8;;;;1180:34;-1:-1:-1;1239:7:50;;;1244:2;1239;:7;1265:6;;;;;;;;:12;1257:21;;;;;;1296:1;1289:8;;1071:234;;;;;;:::o;1541:154::-;1601:7;;1629:6;;;1621:15;;;;;;1664:2;1659;:7;;;;;;;;;1541:154;-1:-1:-1;;;;1541:154:50:o;16934:888:5:-;17046:7;17055;17075:21;;:::i;:::-;16859:47;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17127:79:5;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;17127:79:5;;;;;;25:18:-1;;;61:17;;17127:79:5;182:15:-1;17127:79:5;-1:-1:-1;;;16859:64:5;;;;16844:81;;;17127:79;;;;179:29:-1;;;;160:49;;17493:11:5;;17127:79;;16859:47;17594:3;;17336:5;17287:3;17258:431;17713:7;17706:15;17703:2;;;17751:1;17748;17741:12;17703:2;-1:-1:-1;;17799:6:5;;;17807;;;;17799;;17807;;-1:-1:-1;16934:888:5;-1:-1:-1;;;;;16934:888:5:o;29421:542::-;29587:9;;29620;;;;:22;;;;-1:-1:-1;29633:9:5;;29620:22;:35;;;;-1:-1:-1;29646:9:5;;29620:35;29616:77;;;29677:16;;;29691:1;29677:16;;;;;;;;;-1:-1:-1;29670:23:5;;29616:77;29733:16;;;29747:1;29733:16;;;;;;;;;;;;;17:15:-1;;105:10;29733:16:5;88:34:-1;136:17;;-1:-1;29733:16:5;29704:45;;29775:10;29760:9;29770:1;29760:12;;;;;;;;;;;;;;;;;;:25;29796:12;;29811:6;;29796:9;;29806:1;;29796:12;;;;;;;;;;;;;;:21;29828:12;;29843:11;;;;29828:9;;29838:1;;29828:12;;;;;;;;;;;;;;:26;29865:12;;29888:2;;29865:9;;29875:1;;29865:12;;;;;;;;;;;;;;:26;29902:12;;29925:2;;29902:9;;29912:1;;29902:12;;;;;;;;;;;;;;:26;29946:9;-1:-1:-1;29946:9:5;29421:542;;;;;;;;;:::o;26221:767::-;26373:8;;;:59;;;-1:-1:-1;;;;;26373:59:5;;26392:39;26373:59;;;;;;;;26333:24;;;;;;-1:-1:-1;;;;;26373:8:5;;;;:18;;:59;;;;;;;;;;;;;;26333:24;26373:8;:59;;;5:2:-1;;;;30:1;27;20:12;5:2;26373:59:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26373:59:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;26373:59:5;26450:35;;;;;;-1:-1:-1;;;;;26450:35:5;;;;;;;;;26373:59;;-1:-1:-1;26450:27:5;;;;;;:35;;;;;26373:59;;26450:35;;;;;;;;-1:-1:-1;26450:27:5;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;26450:35:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26450:35:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;26450:35:5;26446:535;;;26524:6;-1:-1:-1;;;;;26524:16:5;;26541:3;26524:21;;;;;-1:-1:-1;;;26524:21:5;;;;;;;-1:-1:-1;;;;;26524:21:5;-1:-1:-1;;;;;26524:21:5;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26524:21:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26524:21:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;26524:21:5;26653:59;;;;;;-1:-1:-1;;;;;26653:59:5;;;;;;;;;;;;;;;;;;;;;;26524:21;;-1:-1:-1;26653:38:5;;;;;;:59;;;;;-1:-1:-1;;26653:59:5;;;;;;;;-1:-1:-1;26653:38:5;:59;;;5:2:-1;;;;30:1;27;20:12;5:2;26653:59:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26653:59:5;;;;26749:6;-1:-1:-1;;;;;26749:16:5;;26766:3;26749:21;;;;;-1:-1:-1;;;26749:21:5;;;;;;;-1:-1:-1;;;;;26749:21:5;-1:-1:-1;;;;;26749:21:5;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26749:21:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26749:21:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;26749:21:5;;-1:-1:-1;26792:25:5;;;26785:33;;;;26446:535;;;26928:40;;;;;;-1:-1:-1;;;;;26928:40:5;;;;;;;;;;;;;;;;;;;;;;:19;;;;;;:40;;;;;;;;;;;;;;;-1:-1:-1;26928:19:5;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;26928:40:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26928:40:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;26928:40:5;26921:48;;;;;;26221:767;;;;;;;:::o;29971:1413::-;30448:26;30561:9;30617:26;30807:20;31194:34;30282:1;30267:5;:12;:16;:48;;;;;30304:10;30287:5;:12;:28;;30267:48;:73;;;;-1:-1:-1;30319:12:5;;30334:1;;30319:16;30339:1;30319:21;30267:73;30259:82;;;;;;;;30495:8;;;:49;;;-1:-1:-1;;;;;30495:49:5;;30514:29;30495:49;;;;;;;;-1:-1:-1;;;;;30495:8:5;;;;:18;;:49;;;;;;;;;;;;;;:8;;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;30495:49:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30495:49:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;30495:49:5;;-1:-1:-1;30573:1:5;;-1:-1:-1;30556:422:5;30580:5;:12;30576:1;:16;30556:422;;;30675:5;30681:1;30675:8;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;30663:27:5;;:29;;;;;-1:-1:-1;;;30663:29:5;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30663:29:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30663:29:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;30663:29:5;30712:74;;;;;;-1:-1:-1;;;;;30712:74:5;;;;;;;326:6:7;30712:74:5;;;;;;30663:29;;-1:-1:-1;30712:20:5;;;;;;:74;;;;;30663:29;;30712:74;;;;;;;;-1:-1:-1;30712:20:5;:74;;;5:2:-1;;;;30:1;27;20:12;5:2;30712:74:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30712:74:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;30712:74:5;30708:259;;;30830:9;-1:-1:-1;;;;;30830:29:5;;:31;;;;;-1:-1:-1;;;30830:31:5;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30830:31:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30830:31:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;30830:31:5;;-1:-1:-1;;;;;;30889:23:5;;;;:61;;;30916:9;-1:-1:-1;;;;;30916:23:5;;30940:9;30916:34;;;;;-1:-1:-1;;;30916:34:5;;;;;;;-1:-1:-1;;;;;30916:34:5;-1:-1:-1;;;;;30916:34:5;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30916:34:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30916:34:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;30916:34:5;30889:61;30880:71;;;;;;;;30599:1;30594:6;;;;30556:422;;;30994:17;;31015:1;-1:-1:-1;30990:387:5;;31066:47;31086:5;31093:7;31102:10;31066:19;:47::i;:::-;30990:387;;;31252:8;;;:54;;;-1:-1:-1;;;;;31252:54:5;;31271:34;31252:54;;;;;;;;-1:-1:-1;;;;;31252:8:5;;;;:18;;:54;;;;;;;;;;;;;;:8;;:54;;;5:2:-1;;;;30:1;27;20:12;5:2;31252:54:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31252:54:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;31252:54:5;31322:43;;;;;;31353:11;31322:43;;;;;;31252:54;;-1:-1:-1;;;;;;31322:30:5;;;;;:43;;;;;-1:-1:-1;;31322:43:5;;;;;;;;-1:-1:-1;31322:30:5;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;31322:43:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31322:43:5;;;;30990:387;29971:1413;;;;;;;;;:::o;31392:582::-;31651:1;31639:9;:13;31635:332;;;31688:9;31677:7;:20;:43;;;;-1:-1:-1;;;;;;31701:19:5;;;;;;:11;:19;;;;;;;;31677:43;31669:52;;;;;;;;31748:6;-1:-1:-1;;;;;31736:27:5;;31770:9;31736:46;;;;;-1:-1:-1;;;31736:46:5;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;31736:46:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31736:46:5;;;;;31635:332;;;31879:6;31875:92;;;31902:53;31921:6;31929:10;31941:4;31947:7;31902:18;:53::i;:::-;31392:582;;;:::o;15069:1716::-;15344:12;;15269:7;;15306;;-1:-1:-1;;15344:16:5;15269:7;;;;-1:-1:-1;;;;;15404:31:5;;;15400:298;;;15460:18;;15452:27;;;;;;15513:1;15494:21;;15400:298;;;15569:13;15565:1;:17;:53;;;;;15603:15;;15586:13;:32;;15565:53;15557:62;;;;;;;;15645:8;;;:41;;;-1:-1:-1;;;;;15645:41:5;;15664:21;15645:41;;;;;;;;-1:-1:-1;;;;;15645:8:5;;;;:18;;:41;;;;;;;;;;;;;;:8;;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;15645:41:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15645:41:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15645:41:5;;-1:-1:-1;15400:298:5;15772:1;15760:13;;15755:997;15775:14;;;15755:997;;15872:5;15882:1;15878;:5;15872:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15860:31:5;;:33;;;;;-1:-1:-1;;;15860:33:5;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15860:33:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15860:33:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15860:33:5;16080:12;;15860:33;;-1:-1:-1;16080:5:5;;-1:-1:-1;;16086:5:5;;;16080:12;;;;;;;;;;;;;;-1:-1:-1;;;;;16064:28:5;:5;16074:1;16070;:5;16064:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16064:28:5;;16060:99;;16111:48;16127:5;16137:1;16133;:5;16127:12;;;;;;;;;;;;;;;;;;16141:9;16152:6;16111:15;:48::i;:::-;16283:9;-1:-1:-1;;;;;16283:16:5;;16300:5;16310:1;16306;:5;16300:12;;;;;;;;;;;;;;;;;;16314:5;16320:1;16314:8;;;;;;;;;;;;;;;;;;16324:6;16337:9;16332:1;:14;:31;;16362:1;16332:31;;;16349:10;16332:31;16283:81;;;;;-1:-1:-1;;;16283:81:5;;;;;;;-1:-1:-1;;;;;16283:81:5;-1:-1:-1;;;;;16283:81:5;;;;;;-1:-1:-1;;;;;16283:81:5;-1:-1:-1;;;;;16283:81:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16283:81:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16283:81:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16283:81:5;16437:8;;16283:81;;-1:-1:-1;;;;;;16429:29:5;;;16437:5;;16443:1;;16437:8;;;;;;;;;;;;;;-1:-1:-1;;;;;16429:29:5;;16425:316;;;16505:55;2070:7;16505:25;:6;16516:13;16505:25;:10;:25;:::i;:55::-;16479:81;;16587:5;16593:1;16587:8;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16587:17:5;;16605;16624:15;16587:53;;;;;-1:-1:-1;;;16587:53:5;;;;;;;-1:-1:-1;;;;;16587:53:5;-1:-1:-1;;;;;16587:53:5;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16587:53:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16587:53:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16587:53:5;16579:62;;;;;;;;16670:15;16660:25;;;;16723:1;16704:21;;16425:316;15796:1;15791:6;;;;15755:997;;;-1:-1:-1;16771:6:5;;15069:1716;-1:-1:-1;;;;;;;;;;15069:1716:5:o;25066:726::-;25199:8;;;:59;;;-1:-1:-1;;;;;25199:59:5;;25218:39;25199:59;;;;;;;;25159:24;;;;;;-1:-1:-1;;;;;25199:8:5;;;;:18;;:59;;;;;;;;;;;;;;25159:24;25199:8;:59;;;5:2:-1;;;;30:1;27;20:12;5:2;25199:59:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25199:59:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;25199:59:5;25276:35;;;;;;-1:-1:-1;;;;;25276:35:5;;;;;;;;;25199:59;;-1:-1:-1;25276:27:5;;;;;;:35;;;;;25199:59;;25276:35;;;;;;;;-1:-1:-1;25276:27:5;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;25276:35:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25276:35:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;25276:35:5;25272:513;;;25350:6;-1:-1:-1;;;;;25350:16:5;;25367:3;25350:21;;;;;-1:-1:-1;;;25350:21:5;;;;;;;-1:-1:-1;;;;;25350:21:5;-1:-1:-1;;;;;25350:21:5;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25350:21:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25350:21:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;25350:21:5;25479:48;;;;;;-1:-1:-1;;;;;25479:48:5;;;;;;;;;;;;;;;25350:21;;-1:-1:-1;25479:34:5;;;;;;:48;;;;;-1:-1:-1;;25479:48:5;;;;;;;;-1:-1:-1;25479:34:5;:48;;;5:2:-1;;;;30:1;27;20:12;5:2;25479:48:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25479:48:5;;;;25564:6;-1:-1:-1;;;;;25564:16:5;;25581:3;25564:21;;;;;-1:-1:-1;;;25564:21:5;;;;;;;-1:-1:-1;;;;;25564:21:5;-1:-1:-1;;;;;25564:21:5;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25564:21:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25564:21:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;25564:21:5;;-1:-1:-1;25607:25:5;;;25600:33;;;;25272:513;;;25743:6;-1:-1:-1;;;;;25743:15:5;;25759:3;25764:7;25743:29;;;;;-1:-1:-1;;;25743:29:5;;;;;;;-1:-1:-1;;;;;25743:29:5;-1:-1:-1;;;;;25743:29:5;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25743:29:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25743:29:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;25743:29:5;25736:37;;;;;;25066:726;;;;;;:::o;4707:1056::-;4820:19;5080:12;5425:20;4842:10;4853:1;4842:13;;;;;;;;;;;;;;;;;;4820:35;;5004:11;4988:12;:27;;4980:36;;;;;;;;5122:11;5135;5148:5;5155:10;5167;5178:1;5167:13;;;;;;;;;;;;;;;;;;5182:5;5105:83;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5105:83:5;-1:-1:-1;;;;;5105:83:5;;;;;;;;-1:-1:-1;;;;;5105:83:5;-1:-1:-1;;;;;5105:83:5;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5105:83:5;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5105:83:5;;;5095:94;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;5095:94:5;;;;;;;;;;;;;-1:-1:-1;5286:22:5;;;:16;:22;;;;;;;5095:94;;-1:-1:-1;;5286:22:5;;5285:23;;-1:-1:-1;5277:32:5;;-1:-1:-1;5277:32:5;;;;;5458:58;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;5458:58:5;;;;;;;;5448:69;;5458:58;;;;;5448:69;;;;5458:58;5448:69;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;;;;365:33;;5448:69:5;;;;;;;;;;5633:13;;5566;;5448:69;;-1:-1:-1;;;;;;5633:13:5;;-1:-1:-1;274:1;;-1:-1;5448:69:5;;-1:-1:-1;5566:13:5;;5577:1;;5566:13;;;;;;;;;;;;;;5590:10;5601:1;5590:13;;;;;;;;;;;;;;;;;;;5614;;:10;;5625:1;;5614:13;;;;;;;;;;;;;;;;5536:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5614:13;;-1:-1:-1;;5536:93:5;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5536:93:5;;;;;;;;-1:-1:-1;;;;;5536:110:5;;5528:119;;;;;;;;-1:-1:-1;5726:22:5;;;;:16;:22;;;;;:29;;-1:-1:-1;;5726:29:5;5751:4;5726:29;;;-1:-1:-1;;;;4707:1056:5:o;27455:523::-;27624:32;;;;;;27641:4;27624:32;;;;-1:-1:-1;;;;;27624:32:5;;;;;;;;;27660:6;;27624:16;;;;;:32;;;;;;;;;;;;;;-1:-1:-1;27624:16:5;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;27624:32:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27624:32:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;27624:32:5;:42;27620:68;;27681:7;;27620:68;27770:32;;;;;;27787:4;27770:32;;;;-1:-1:-1;;;;;27770:32:5;;;;;;;;;:16;;;;;;:32;;;;;;;;;;;;;;;-1:-1:-1;27770:16:5;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;27770:32:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27770:32:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;27770:32:5;:37;27766:102;;27822:46;;;;;;-1:-1:-1;;;;;27822:46:5;;;;;;;27866:1;27822:46;;;;;;;;:33;;;;;;:46;;;;;;;;;;;27866:1;27822:33;:46;;;5:2:-1;;;;30:1;27;20:12;5:2;27822:46:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27822:46:5;;;;27766:102;27937:6;-1:-1:-1;;;;;27919:33:5;;27953:8;27963:6;27919:51;;;;;-1:-1:-1;;;27919:51:5;;;;;;;-1:-1:-1;;;;;27919:51:5;-1:-1:-1;;;;;27919:51:5;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27919:51:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;816:741:28;;;;;;;;;;;;;;;105:10:-1;816:741:28;88:34:-1;-1:-1;816:741:28;;;-1:-1:-1;;816:741:28:o",
  "source": "pragma solidity ^0.4.24;\nimport '../BancorNetwork.sol';\n\ncontract OldBancorConverter {\n    uint256 private amount;\n\n    constructor(uint256 _amount) public {\n        amount = _amount;\n    }\n\n    function getReturn(IERC20Token _fromToken, IERC20Token _toToken, uint256 _amount) external view returns (uint256) {\n        _fromToken;\n        _toToken;\n        _amount;\n        return (amount);\n    }\n}\n\ncontract NewBancorConverter {\n    uint256 private amount;\n    uint256 private fee;\n\n    constructor(uint256 _amount, uint256 _fee) public {\n        amount = _amount;\n        fee = _fee;\n    }\n\n    function getReturn(IERC20Token _fromToken, IERC20Token _toToken, uint256 _amount) external view returns (uint256, uint256) {\n        _fromToken;\n        _toToken;\n        _amount;\n        return (amount, fee);\n    }\n}\n\ncontract TestBancorNetwork is BancorNetwork {\n    OldBancorConverter private oldBancorConverter;\n    NewBancorConverter private newBancorConverter;\n\n    constructor(uint256 _amount, uint256 _fee) public BancorNetwork(IContractRegistry(address(1))) {\n        oldBancorConverter = new OldBancorConverter(_amount);\n        newBancorConverter = new NewBancorConverter(_amount, _fee);\n    }\n\n    function getReturnOld() external view returns (uint256, uint256) {\n        return getReturn(address(oldBancorConverter), IERC20Token(0), IERC20Token(0), uint256(0));\n    }\n\n    function getReturnNew() external view returns (uint256, uint256) {\n        return getReturn(address(newBancorConverter), IERC20Token(0), IERC20Token(0), uint256(0));\n    }\n}\n",
  "sourcePath": "/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/helpers/TestBancorNetwork.sol",
  "ast": {
    "absolutePath": "/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/helpers/TestBancorNetwork.sol",
    "exportedSymbols": {
      "NewBancorConverter": [
        10626
      ],
      "OldBancorConverter": [
        10581
      ],
      "TestBancorNetwork": [
        10709
      ]
    },
    "id": 10710,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10546,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:28"
      },
      {
        "absolutePath": "/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/BancorNetwork.sol",
        "file": "../BancorNetwork.sol",
        "id": 10547,
        "nodeType": "ImportDirective",
        "scope": 10710,
        "sourceUnit": 2492,
        "src": "25:30:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10581,
        "linearizedBaseContracts": [
          10581
        ],
        "name": "OldBancorConverter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10549,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 10581,
            "src": "91:22:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10548,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "91:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10558,
              "nodeType": "Block",
              "src": "156:33:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10554,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10549,
                      "src": "166:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10555,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10551,
                      "src": "175:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "166:16:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10557,
                  "nodeType": "ExpressionStatement",
                  "src": "166:16:28"
                }
              ]
            },
            "documentation": null,
            "id": 10559,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10551,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10559,
                  "src": "132:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10550,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "132:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "131:17:28"
            },
            "payable": false,
            "returnParameters": {
              "id": 10553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "156:0:28"
            },
            "scope": 10581,
            "src": "120:69:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10579,
              "nodeType": "Block",
              "src": "309:87:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10570,
                    "name": "_fromToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10561,
                    "src": "319:10:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11943",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 10571,
                  "nodeType": "ExpressionStatement",
                  "src": "319:10:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10572,
                    "name": "_toToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10563,
                    "src": "339:8:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11943",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 10573,
                  "nodeType": "ExpressionStatement",
                  "src": "339:8:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10574,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10565,
                    "src": "357:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10575,
                  "nodeType": "ExpressionStatement",
                  "src": "357:7:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 10576,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10549,
                        "src": "382:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 10577,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "381:8:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10569,
                  "id": 10578,
                  "nodeType": "Return",
                  "src": "374:15:28"
                }
              ]
            },
            "documentation": null,
            "id": 10580,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10561,
                  "name": "_fromToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 10580,
                  "src": "214:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$11943",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10560,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11943,
                    "src": "214:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11943",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10563,
                  "name": "_toToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 10580,
                  "src": "238:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$11943",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10562,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11943,
                    "src": "238:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11943",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10565,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10580,
                  "src": "260:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10564,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "213:63:28"
            },
            "payable": false,
            "returnParameters": {
              "id": 10569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10568,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10580,
                  "src": "300:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "300:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "299:9:28"
            },
            "scope": 10581,
            "src": "195:201:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 10710,
        "src": "57:341:28"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10626,
        "linearizedBaseContracts": [
          10626
        ],
        "name": "NewBancorConverter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10583,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 10626,
            "src": "434:22:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10582,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "434:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 10585,
            "name": "fee",
            "nodeType": "VariableDeclaration",
            "scope": 10626,
            "src": "462:19:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10584,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "462:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10600,
              "nodeType": "Block",
              "src": "538:53:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10592,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10583,
                      "src": "548:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10593,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10587,
                      "src": "557:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "548:16:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10595,
                  "nodeType": "ExpressionStatement",
                  "src": "548:16:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10596,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10585,
                      "src": "574:3:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10597,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10589,
                      "src": "580:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "574:10:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10599,
                  "nodeType": "ExpressionStatement",
                  "src": "574:10:28"
                }
              ]
            },
            "documentation": null,
            "id": 10601,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10587,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10601,
                  "src": "500:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10589,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 10601,
                  "src": "517:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "517:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "499:31:28"
            },
            "payable": false,
            "returnParameters": {
              "id": 10591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:0:28"
            },
            "scope": 10626,
            "src": "488:103:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10624,
              "nodeType": "Block",
              "src": "720:92:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10614,
                    "name": "_fromToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10603,
                    "src": "730:10:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11943",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 10615,
                  "nodeType": "ExpressionStatement",
                  "src": "730:10:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10616,
                    "name": "_toToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10605,
                    "src": "750:8:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11943",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 10617,
                  "nodeType": "ExpressionStatement",
                  "src": "750:8:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10618,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10607,
                    "src": "768:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10619,
                  "nodeType": "ExpressionStatement",
                  "src": "768:7:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 10620,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10583,
                        "src": "793:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10621,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10585,
                        "src": "801:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 10622,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "792:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 10613,
                  "id": 10623,
                  "nodeType": "Return",
                  "src": "785:20:28"
                }
              ]
            },
            "documentation": null,
            "id": 10625,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10603,
                  "name": "_fromToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 10625,
                  "src": "616:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$11943",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10602,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11943,
                    "src": "616:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11943",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10605,
                  "name": "_toToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 10625,
                  "src": "640:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$11943",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10604,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11943,
                    "src": "640:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11943",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10607,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10625,
                  "src": "662:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "615:63:28"
            },
            "payable": false,
            "returnParameters": {
              "id": 10613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10610,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10625,
                  "src": "702:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "702:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10612,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10625,
                  "src": "711:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10611,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "701:18:28"
            },
            "scope": 10626,
            "src": "597:215:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 10710,
        "src": "400:414:28"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10627,
              "name": "BancorNetwork",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2491,
              "src": "846:13:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BancorNetwork_$2491",
                "typeString": "contract BancorNetwork"
              }
            },
            "id": 10628,
            "nodeType": "InheritanceSpecifier",
            "src": "846:13:28"
          }
        ],
        "contractDependencies": [
          2491,
          2530,
          2538,
          2753,
          10581,
          10626,
          12678,
          12828,
          12875,
          13077,
          13093
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10709,
        "linearizedBaseContracts": [
          10709,
          2491,
          2538,
          2530,
          12828,
          12875,
          12678,
          13093,
          13077,
          2753
        ],
        "name": "TestBancorNetwork",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10630,
            "name": "oldBancorConverter",
            "nodeType": "VariableDeclaration",
            "scope": 10709,
            "src": "866:45:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OldBancorConverter_$10581",
              "typeString": "contract OldBancorConverter"
            },
            "typeName": {
              "contractScope": null,
              "id": 10629,
              "name": "OldBancorConverter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10581,
              "src": "866:18:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OldBancorConverter_$10581",
                "typeString": "contract OldBancorConverter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 10632,
            "name": "newBancorConverter",
            "nodeType": "VariableDeclaration",
            "scope": 10709,
            "src": "917:45:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NewBancorConverter_$10626",
              "typeString": "contract NewBancorConverter"
            },
            "typeName": {
              "contractScope": null,
              "id": 10631,
              "name": "NewBancorConverter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10626,
              "src": "917:18:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NewBancorConverter_$10626",
                "typeString": "contract NewBancorConverter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10661,
              "nodeType": "Block",
              "src": "1064:137:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10646,
                      "name": "oldBancorConverter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10630,
                      "src": "1074:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OldBancorConverter_$10581",
                        "typeString": "contract OldBancorConverter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10649,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10634,
                          "src": "1118:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 10648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1095:22:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_OldBancorConverter_$10581_$",
                          "typeString": "function (uint256) returns (contract OldBancorConverter)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 10647,
                          "name": "OldBancorConverter",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 10581,
                          "src": "1099:18:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OldBancorConverter_$10581",
                            "typeString": "contract OldBancorConverter"
                          }
                        }
                      },
                      "id": 10650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1095:31:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OldBancorConverter_$10581",
                        "typeString": "contract OldBancorConverter"
                      }
                    },
                    "src": "1074:52:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OldBancorConverter_$10581",
                      "typeString": "contract OldBancorConverter"
                    }
                  },
                  "id": 10652,
                  "nodeType": "ExpressionStatement",
                  "src": "1074:52:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10653,
                      "name": "newBancorConverter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10632,
                      "src": "1136:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NewBancorConverter_$10626",
                        "typeString": "contract NewBancorConverter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10656,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10634,
                          "src": "1180:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 10657,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10636,
                          "src": "1189:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 10655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1157:22:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$returns$_t_contract$_NewBancorConverter_$10626_$",
                          "typeString": "function (uint256,uint256) returns (contract NewBancorConverter)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 10654,
                          "name": "NewBancorConverter",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 10626,
                          "src": "1161:18:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NewBancorConverter_$10626",
                            "typeString": "contract NewBancorConverter"
                          }
                        }
                      },
                      "id": 10658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1157:37:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NewBancorConverter_$10626",
                        "typeString": "contract NewBancorConverter"
                      }
                    },
                    "src": "1136:58:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NewBancorConverter_$10626",
                      "typeString": "contract NewBancorConverter"
                    }
                  },
                  "id": 10660,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:58:28"
                }
              ]
            },
            "documentation": null,
            "id": 10662,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 10641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1059:1:28",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 10640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1051:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 10642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1051:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10639,
                      "name": "IContractRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13060,
                      "src": "1033:17:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IContractRegistry_$13060_$",
                        "typeString": "type(contract IContractRegistry)"
                      }
                    },
                    "id": 10643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:29:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IContractRegistry_$13060",
                      "typeString": "contract IContractRegistry"
                    }
                  }
                ],
                "id": 10644,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10638,
                  "name": "BancorNetwork",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2491,
                  "src": "1019:13:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BancorNetwork_$2491_$",
                    "typeString": "type(contract BancorNetwork)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1019:44:28"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10634,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10662,
                  "src": "981:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "981:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10636,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 10662,
                  "src": "998:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "980:31:28"
            },
            "payable": false,
            "returnParameters": {
              "id": 10645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1064:0:28"
            },
            "scope": 10709,
            "src": "969:232:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10684,
              "nodeType": "Block",
              "src": "1272:106:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10671,
                            "name": "oldBancorConverter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10630,
                            "src": "1307:18:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OldBancorConverter_$10581",
                              "typeString": "contract OldBancorConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OldBancorConverter_$10581",
                              "typeString": "contract OldBancorConverter"
                            }
                          ],
                          "id": 10670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1299:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 10672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1299:27:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1340:1:28",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10673,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11943,
                          "src": "1328:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$11943_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 10675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1328:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$11943",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1356:1:28",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10676,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11943,
                          "src": "1344:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$11943_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 10678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1344:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$11943",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1368:1:28",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1360:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 10681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1360:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$11943",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$11943",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10669,
                      "name": "getReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1345,
                      "src": "1289:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 10682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1289:82:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 10668,
                  "id": 10683,
                  "nodeType": "Return",
                  "src": "1282:89:28"
                }
              ]
            },
            "documentation": null,
            "id": 10685,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturnOld",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1228:2:28"
            },
            "payable": false,
            "returnParameters": {
              "id": 10668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10665,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10685,
                  "src": "1254:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10667,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10685,
                  "src": "1263:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1253:18:28"
            },
            "scope": 10709,
            "src": "1207:171:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10707,
              "nodeType": "Block",
              "src": "1449:106:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10694,
                            "name": "newBancorConverter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10632,
                            "src": "1484:18:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NewBancorConverter_$10626",
                              "typeString": "contract NewBancorConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NewBancorConverter_$10626",
                              "typeString": "contract NewBancorConverter"
                            }
                          ],
                          "id": 10693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1476:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 10695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1476:27:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1517:1:28",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10696,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11943,
                          "src": "1505:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$11943_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 10698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1505:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$11943",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1533:1:28",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10699,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11943,
                          "src": "1521:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$11943_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 10701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1521:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$11943",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1545:1:28",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1537:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 10704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1537:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$11943",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$11943",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10692,
                      "name": "getReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1345,
                      "src": "1466:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 10705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1466:82:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 10691,
                  "id": 10706,
                  "nodeType": "Return",
                  "src": "1459:89:28"
                }
              ]
            },
            "documentation": null,
            "id": 10708,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturnNew",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1405:2:28"
            },
            "payable": false,
            "returnParameters": {
              "id": 10691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10688,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10708,
                  "src": "1431:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1431:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10690,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10708,
                  "src": "1440:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1440:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1430:18:28"
            },
            "scope": 10709,
            "src": "1384:171:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 10710,
        "src": "816:741:28"
      }
    ],
    "src": "0:1558:28"
  },
  "legacyAST": {
    "absolutePath": "/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/helpers/TestBancorNetwork.sol",
    "exportedSymbols": {
      "NewBancorConverter": [
        10626
      ],
      "OldBancorConverter": [
        10581
      ],
      "TestBancorNetwork": [
        10709
      ]
    },
    "id": 10710,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10546,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:28"
      },
      {
        "absolutePath": "/Users/cryptotom/code/gitcoin/communiteths/contracts/bancor/BancorNetwork.sol",
        "file": "../BancorNetwork.sol",
        "id": 10547,
        "nodeType": "ImportDirective",
        "scope": 10710,
        "sourceUnit": 2492,
        "src": "25:30:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10581,
        "linearizedBaseContracts": [
          10581
        ],
        "name": "OldBancorConverter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10549,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 10581,
            "src": "91:22:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10548,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "91:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10558,
              "nodeType": "Block",
              "src": "156:33:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10554,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10549,
                      "src": "166:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10555,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10551,
                      "src": "175:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "166:16:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10557,
                  "nodeType": "ExpressionStatement",
                  "src": "166:16:28"
                }
              ]
            },
            "documentation": null,
            "id": 10559,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10551,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10559,
                  "src": "132:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10550,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "132:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "131:17:28"
            },
            "payable": false,
            "returnParameters": {
              "id": 10553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "156:0:28"
            },
            "scope": 10581,
            "src": "120:69:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10579,
              "nodeType": "Block",
              "src": "309:87:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10570,
                    "name": "_fromToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10561,
                    "src": "319:10:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11943",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 10571,
                  "nodeType": "ExpressionStatement",
                  "src": "319:10:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10572,
                    "name": "_toToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10563,
                    "src": "339:8:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11943",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 10573,
                  "nodeType": "ExpressionStatement",
                  "src": "339:8:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10574,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10565,
                    "src": "357:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10575,
                  "nodeType": "ExpressionStatement",
                  "src": "357:7:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 10576,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10549,
                        "src": "382:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 10577,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "381:8:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10569,
                  "id": 10578,
                  "nodeType": "Return",
                  "src": "374:15:28"
                }
              ]
            },
            "documentation": null,
            "id": 10580,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10561,
                  "name": "_fromToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 10580,
                  "src": "214:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$11943",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10560,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11943,
                    "src": "214:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11943",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10563,
                  "name": "_toToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 10580,
                  "src": "238:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$11943",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10562,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11943,
                    "src": "238:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11943",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10565,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10580,
                  "src": "260:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10564,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "213:63:28"
            },
            "payable": false,
            "returnParameters": {
              "id": 10569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10568,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10580,
                  "src": "300:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "300:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "299:9:28"
            },
            "scope": 10581,
            "src": "195:201:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 10710,
        "src": "57:341:28"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10626,
        "linearizedBaseContracts": [
          10626
        ],
        "name": "NewBancorConverter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10583,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 10626,
            "src": "434:22:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10582,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "434:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 10585,
            "name": "fee",
            "nodeType": "VariableDeclaration",
            "scope": 10626,
            "src": "462:19:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10584,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "462:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10600,
              "nodeType": "Block",
              "src": "538:53:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10592,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10583,
                      "src": "548:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10593,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10587,
                      "src": "557:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "548:16:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10595,
                  "nodeType": "ExpressionStatement",
                  "src": "548:16:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10596,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10585,
                      "src": "574:3:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10597,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10589,
                      "src": "580:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "574:10:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10599,
                  "nodeType": "ExpressionStatement",
                  "src": "574:10:28"
                }
              ]
            },
            "documentation": null,
            "id": 10601,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10587,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10601,
                  "src": "500:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10589,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 10601,
                  "src": "517:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "517:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "499:31:28"
            },
            "payable": false,
            "returnParameters": {
              "id": 10591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:0:28"
            },
            "scope": 10626,
            "src": "488:103:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10624,
              "nodeType": "Block",
              "src": "720:92:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10614,
                    "name": "_fromToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10603,
                    "src": "730:10:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11943",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 10615,
                  "nodeType": "ExpressionStatement",
                  "src": "730:10:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10616,
                    "name": "_toToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10605,
                    "src": "750:8:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11943",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 10617,
                  "nodeType": "ExpressionStatement",
                  "src": "750:8:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10618,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10607,
                    "src": "768:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10619,
                  "nodeType": "ExpressionStatement",
                  "src": "768:7:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 10620,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10583,
                        "src": "793:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10621,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10585,
                        "src": "801:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 10622,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "792:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 10613,
                  "id": 10623,
                  "nodeType": "Return",
                  "src": "785:20:28"
                }
              ]
            },
            "documentation": null,
            "id": 10625,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10603,
                  "name": "_fromToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 10625,
                  "src": "616:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$11943",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10602,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11943,
                    "src": "616:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11943",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10605,
                  "name": "_toToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 10625,
                  "src": "640:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$11943",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10604,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11943,
                    "src": "640:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11943",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10607,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10625,
                  "src": "662:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "615:63:28"
            },
            "payable": false,
            "returnParameters": {
              "id": 10613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10610,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10625,
                  "src": "702:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "702:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10612,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10625,
                  "src": "711:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10611,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "701:18:28"
            },
            "scope": 10626,
            "src": "597:215:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 10710,
        "src": "400:414:28"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10627,
              "name": "BancorNetwork",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2491,
              "src": "846:13:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BancorNetwork_$2491",
                "typeString": "contract BancorNetwork"
              }
            },
            "id": 10628,
            "nodeType": "InheritanceSpecifier",
            "src": "846:13:28"
          }
        ],
        "contractDependencies": [
          2491,
          2530,
          2538,
          2753,
          10581,
          10626,
          12678,
          12828,
          12875,
          13077,
          13093
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10709,
        "linearizedBaseContracts": [
          10709,
          2491,
          2538,
          2530,
          12828,
          12875,
          12678,
          13093,
          13077,
          2753
        ],
        "name": "TestBancorNetwork",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10630,
            "name": "oldBancorConverter",
            "nodeType": "VariableDeclaration",
            "scope": 10709,
            "src": "866:45:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OldBancorConverter_$10581",
              "typeString": "contract OldBancorConverter"
            },
            "typeName": {
              "contractScope": null,
              "id": 10629,
              "name": "OldBancorConverter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10581,
              "src": "866:18:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OldBancorConverter_$10581",
                "typeString": "contract OldBancorConverter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 10632,
            "name": "newBancorConverter",
            "nodeType": "VariableDeclaration",
            "scope": 10709,
            "src": "917:45:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NewBancorConverter_$10626",
              "typeString": "contract NewBancorConverter"
            },
            "typeName": {
              "contractScope": null,
              "id": 10631,
              "name": "NewBancorConverter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10626,
              "src": "917:18:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NewBancorConverter_$10626",
                "typeString": "contract NewBancorConverter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10661,
              "nodeType": "Block",
              "src": "1064:137:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10646,
                      "name": "oldBancorConverter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10630,
                      "src": "1074:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OldBancorConverter_$10581",
                        "typeString": "contract OldBancorConverter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10649,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10634,
                          "src": "1118:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 10648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1095:22:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_OldBancorConverter_$10581_$",
                          "typeString": "function (uint256) returns (contract OldBancorConverter)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 10647,
                          "name": "OldBancorConverter",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 10581,
                          "src": "1099:18:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OldBancorConverter_$10581",
                            "typeString": "contract OldBancorConverter"
                          }
                        }
                      },
                      "id": 10650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1095:31:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OldBancorConverter_$10581",
                        "typeString": "contract OldBancorConverter"
                      }
                    },
                    "src": "1074:52:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OldBancorConverter_$10581",
                      "typeString": "contract OldBancorConverter"
                    }
                  },
                  "id": 10652,
                  "nodeType": "ExpressionStatement",
                  "src": "1074:52:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10653,
                      "name": "newBancorConverter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10632,
                      "src": "1136:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NewBancorConverter_$10626",
                        "typeString": "contract NewBancorConverter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10656,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10634,
                          "src": "1180:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 10657,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10636,
                          "src": "1189:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 10655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1157:22:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$returns$_t_contract$_NewBancorConverter_$10626_$",
                          "typeString": "function (uint256,uint256) returns (contract NewBancorConverter)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 10654,
                          "name": "NewBancorConverter",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 10626,
                          "src": "1161:18:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NewBancorConverter_$10626",
                            "typeString": "contract NewBancorConverter"
                          }
                        }
                      },
                      "id": 10658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1157:37:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NewBancorConverter_$10626",
                        "typeString": "contract NewBancorConverter"
                      }
                    },
                    "src": "1136:58:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NewBancorConverter_$10626",
                      "typeString": "contract NewBancorConverter"
                    }
                  },
                  "id": 10660,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:58:28"
                }
              ]
            },
            "documentation": null,
            "id": 10662,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 10641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1059:1:28",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 10640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1051:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 10642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1051:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10639,
                      "name": "IContractRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13060,
                      "src": "1033:17:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IContractRegistry_$13060_$",
                        "typeString": "type(contract IContractRegistry)"
                      }
                    },
                    "id": 10643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:29:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IContractRegistry_$13060",
                      "typeString": "contract IContractRegistry"
                    }
                  }
                ],
                "id": 10644,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10638,
                  "name": "BancorNetwork",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2491,
                  "src": "1019:13:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BancorNetwork_$2491_$",
                    "typeString": "type(contract BancorNetwork)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1019:44:28"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10634,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10662,
                  "src": "981:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "981:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10636,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 10662,
                  "src": "998:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "980:31:28"
            },
            "payable": false,
            "returnParameters": {
              "id": 10645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1064:0:28"
            },
            "scope": 10709,
            "src": "969:232:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10684,
              "nodeType": "Block",
              "src": "1272:106:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10671,
                            "name": "oldBancorConverter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10630,
                            "src": "1307:18:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OldBancorConverter_$10581",
                              "typeString": "contract OldBancorConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OldBancorConverter_$10581",
                              "typeString": "contract OldBancorConverter"
                            }
                          ],
                          "id": 10670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1299:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 10672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1299:27:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1340:1:28",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10673,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11943,
                          "src": "1328:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$11943_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 10675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1328:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$11943",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1356:1:28",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10676,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11943,
                          "src": "1344:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$11943_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 10678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1344:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$11943",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1368:1:28",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1360:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 10681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1360:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$11943",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$11943",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10669,
                      "name": "getReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1345,
                      "src": "1289:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 10682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1289:82:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 10668,
                  "id": 10683,
                  "nodeType": "Return",
                  "src": "1282:89:28"
                }
              ]
            },
            "documentation": null,
            "id": 10685,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturnOld",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1228:2:28"
            },
            "payable": false,
            "returnParameters": {
              "id": 10668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10665,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10685,
                  "src": "1254:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10667,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10685,
                  "src": "1263:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1253:18:28"
            },
            "scope": 10709,
            "src": "1207:171:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10707,
              "nodeType": "Block",
              "src": "1449:106:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10694,
                            "name": "newBancorConverter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10632,
                            "src": "1484:18:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NewBancorConverter_$10626",
                              "typeString": "contract NewBancorConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NewBancorConverter_$10626",
                              "typeString": "contract NewBancorConverter"
                            }
                          ],
                          "id": 10693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1476:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 10695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1476:27:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1517:1:28",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10696,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11943,
                          "src": "1505:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$11943_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 10698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1505:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$11943",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1533:1:28",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10699,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11943,
                          "src": "1521:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$11943_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 10701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1521:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$11943",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1545:1:28",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1537:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 10704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1537:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$11943",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$11943",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10692,
                      "name": "getReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1345,
                      "src": "1466:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 10705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1466:82:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 10691,
                  "id": 10706,
                  "nodeType": "Return",
                  "src": "1459:89:28"
                }
              ]
            },
            "documentation": null,
            "id": 10708,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturnNew",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1405:2:28"
            },
            "payable": false,
            "returnParameters": {
              "id": 10691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10688,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10708,
                  "src": "1431:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1431:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10690,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10708,
                  "src": "1440:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1440:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1430:18:28"
            },
            "scope": 10709,
            "src": "1384:171:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 10710,
        "src": "816:741:28"
      }
    ],
    "src": "0:1558:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.26+commit.4563c3fc.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-10-30T08:26:43.611Z",
  "devdoc": {
    "methods": {
      "acceptOwnership()": {
        "details": "used by a new owner to accept an ownership transfer\r"
      },
      "claimAndConvert(address[],uint256,uint256)": {
        "details": "deprecated, backward compatibility\r"
      },
      "claimAndConvert2(address[],uint256,uint256,address,uint256)": {
        "details": "claims the caller's tokens, converts them to any other token in the bancor network\r by following a predefined conversion path and transfers the result tokens back to the sender\r note that allowance must be set beforehand\r \r",
        "params": {
          "_affiliateAccount": "affiliate account\r",
          "_affiliateFee": "affiliate fee in PPM\r \r",
          "_amount": "amount to convert from (in the initial source token)\r",
          "_minReturn": "if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\r",
          "_path": "conversion path, see conversion path format above\r"
        },
        "return": "tokens issued in return\r"
      },
      "claimAndConvertFor(address[],uint256,uint256,address)": {
        "details": "deprecated, backward compatibility\r"
      },
      "claimAndConvertFor2(address[],uint256,uint256,address,address,uint256)": {
        "details": "claims the caller's tokens, converts them to any other token in the bancor network\r by following a predefined conversion path and transfers the result tokens to a target account\r note that allowance must be set beforehand\r \r",
        "params": {
          "_affiliateAccount": "affiliate account\r",
          "_affiliateFee": "affiliate fee in PPM\r \r",
          "_amount": "amount to convert from (in the initial source token)\r",
          "_for": "account that will receive the conversion result\r",
          "_minReturn": "if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\r",
          "_path": "conversion path, see conversion path format above\r"
        },
        "return": "tokens issued in return\r"
      },
      "convert(address[],uint256,uint256)": {
        "details": "deprecated, backward compatibility\r"
      },
      "convert2(address[],uint256,uint256,address,uint256)": {
        "details": "converts the token to any other token in the bancor network by following\r a predefined conversion path and transfers the result tokens back to the sender\r note that the converter should already own the source tokens\r \r",
        "params": {
          "_affiliateAccount": "affiliate account\r",
          "_affiliateFee": "affiliate fee in PPM\r \r",
          "_amount": "amount to convert from (in the initial source token)\r",
          "_minReturn": "if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\r",
          "_path": "conversion path, see conversion path format above\r"
        },
        "return": "tokens issued in return\r"
      },
      "convertFor(address[],uint256,uint256,address)": {
        "details": "deprecated, backward compatibility\r"
      },
      "convertFor2(address[],uint256,uint256,address,address,uint256)": {
        "details": "converts the token to any other token in the bancor network by following\r a predefined conversion path and transfers the result tokens to a target account\r note that the converter should already own the source tokens\r \r",
        "params": {
          "_affiliateAccount": "affiliate account\r",
          "_affiliateFee": "affiliate fee in PPM\r \r",
          "_amount": "amount to convert from (in the initial source token)\r",
          "_for": "account that will receive the conversion result\r",
          "_minReturn": "if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\r",
          "_path": "conversion path, see conversion path format above\r"
        },
        "return": "tokens issued in return\r"
      },
      "convertForPrioritized(address[],uint256,uint256,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "deprecated, backward compatibility\r"
      },
      "convertForPrioritized2(address[],uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
        "details": "deprecated, backward compatibility\r"
      },
      "convertForPrioritized3(address[],uint256,uint256,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "deprecated, backward compatibility\r"
      },
      "convertForPrioritized4(address[],uint256,uint256,address,uint256[],address,uint256)": {
        "details": "converts the token to any other token in the bancor network\r by following a predefined conversion path and transfers the result\r tokens to a target account.\r this version of the function also allows the verified signer\r to bypass the universal gas price limit.\r note that the converter should already own the source tokens\r \r",
        "params": {
          "_affiliateAccount": "affiliate account\r",
          "_affiliateFee": "affiliate fee in PPM\r \r",
          "_amount": "amount to convert from (in the initial source token)\r",
          "_for": "account that will receive the conversion result\r",
          "_minReturn": "if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\r",
          "_path": "conversion path, see conversion path format above\r",
          "_signature": "an array of the following elements:\r                            [0] uint256     custom value that was signed for prioritized conversion\r                            [1] uint256     if the current block exceeded the given parameter - it is cancelled\r                            [2] uint8       (signature[128:130]) associated with the signer address and helps to validate if the signature is legit\r                            [3] bytes32     (signature[0:64]) associated with the signer address and helps to validate if the signature is legit\r                            [4] bytes32     (signature[64:128]) associated with the signer address and helps to validate if the signature is legit\r                            if the array is empty (length == 0), then the gas-price limit is verified instead of the signature\r"
        },
        "return": "tokens issued in return\r"
      },
      "getReturnByPath(address[],uint256)": {
        "details": "returns the expected return amount for converting a specific amount by following\r a given conversion path.\r notice that there is no support for circular paths.\r \r",
        "params": {
          "_amount": "amount to convert from (in the initial source token)\r \r",
          "_path": "conversion path, see conversion path format above\r"
        },
        "return": "expected conversion return amount and conversion fee\r"
      },
      "registerEtherToken(address,bool)": {
        "details": "allows the owner to register/unregister ether tokens\r \r",
        "params": {
          "_register": "true to register, false to unregister\r",
          "_token": "ether token contract address\r"
        }
      },
      "setMaxAffiliateFee(uint256)": {
        "details": "allows the owner to update the maximum affiliate-fee\r \r",
        "params": {
          "_maxAffiliateFee": "maximum affiliate-fee\r"
        }
      },
      "setRegistry(address)": {
        "details": "allows the owner to update the contract registry contract address\r \r",
        "params": {
          "_registry": "address of a contract registry contract\r"
        }
      },
      "setSignerAddress(address)": {
        "details": "allows the owner to update the signer address\r \r",
        "params": {
          "_signerAddress": "new signer address\r"
        }
      },
      "transferOwnership(address)": {
        "details": "allows transferring the contract ownership\r the new owner still needs to accept the transfer\r can only be called by the contract owner\r \r",
        "params": {
          "_newOwner": "new contract owner\r"
        }
      },
      "withdrawTokens(address,address,uint256)": {
        "details": "withdraws tokens held by the contract and sends them to an account\r can only be called by the owner\r \r",
        "params": {
          "_amount": "amount to withdraw\r",
          "_to": "account to receive the new amount\r",
          "_token": "ERC20 token contract address\r"
        }
      },
      "xConvert(address[],uint256,uint256,bytes32,bytes32,uint256)": {
        "details": "converts any other token to BNT in the bancor network\r by following a predefined conversion path and transfers the resulting\r tokens to BancorX.\r note that the network should already have been given allowance of the source token (if not ETH)\r \r",
        "params": {
          "_amount": "amount to convert from (in the initial source token)\r",
          "_conversionId": "pre-determined unique (if non zero) id which refers to this transaction \r \r",
          "_minReturn": "if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\r",
          "_path": "conversion path, see conversion path format above\r",
          "_to": "address/account on _toBlockchain to send the BNT to\r",
          "_toBlockchain": "blockchain BNT will be issued on\r"
        },
        "return": "the amount of BNT received from this conversion\r"
      },
      "xConvertPrioritized(address[],uint256,uint256,bytes32,bytes32,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "deprecated, backward compatibility\r"
      },
      "xConvertPrioritized2(address[],uint256,uint256,bytes32,bytes32,uint256,uint256[])": {
        "details": "converts any other token to BNT in the bancor network\r by following a predefined conversion path and transfers the resulting\r tokens to BancorX.\r this version of the function also allows the verified signer\r to bypass the universal gas price limit.\r note that the network should already have been given allowance of the source token (if not ETH)\r \r",
        "params": {
          "_amount": "amount to convert from (in the initial source token)\r",
          "_conversionId": "pre-determined unique (if non zero) id which refers to this transaction \r",
          "_minReturn": "if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\r",
          "_path": "conversion path, see conversion path format above\r",
          "_signature": "an array of the following elements:\r                        [0] uint256     custom value that was signed for prioritized conversion; must be equal to _amount\r                        [1] uint256     if the current block exceeded the given parameter - it is cancelled\r                        [2] uint8       (signature[128:130]) associated with the signer address and helps to validate if the signature is legit\r                        [3] bytes32     (signature[0:64]) associated with the signer address and helps to validate if the signature is legit\r                        [4] bytes32     (signature[64:128]) associated with the signer address and helps to validate if the signature is legit\r                        if the array is empty (length == 0), then the gas-price limit is verified instead of the signature\r \r",
          "_to": "address/account on _toBlockchain to send the BNT to\r",
          "_toBlockchain": "blockchain BNT will be issued on\r"
        },
        "return": "the amount of BNT received from this conversion\r"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}